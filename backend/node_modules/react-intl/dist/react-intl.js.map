{"version":3,"file":"react-intl.js","sources":["../node_modules/intl-messageformat/node_modules/intl-messageformat-parser/lib/types.js","../node_modules/intl-messageformat/node_modules/intl-messageformat-parser/lib/parser.js","../node_modules/intl-messageformat/node_modules/intl-messageformat-parser/lib/normalize.js","../node_modules/intl-messageformat/node_modules/intl-messageformat-parser/lib/skeleton.js","../node_modules/intl-messageformat/node_modules/intl-messageformat-parser/lib/index.js","../node_modules/intl-format-cache/lib/index.js","../node_modules/intl-messageformat/lib/error.js","../node_modules/intl-messageformat/lib/formatters.js","../node_modules/intl-messageformat/lib/core.js","../node_modules/intl-messageformat/lib/index.js","../node_modules/@formatjs/intl-utils/lib/invariant.js","../lib/error.js","../lib/utils.js","../node_modules/react-is/cjs/react-is.development.js","../node_modules/react-is/index.js","../node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js","../lib/components/injectIntl.js","../lib/components/createFormattedComponent.js","../lib/components/useIntl.js","../lib/formatters/number.js","../lib/formatters/relativeTime.js","../lib/formatters/dateTime.js","../lib/formatters/plural.js","../lib/formatters/message.js","../node_modules/shallow-equal/objects/index.js","../lib/formatters/list.js","../lib/formatters/displayName.js","../lib/components/provider.js","../lib/components/relative.js","../lib/components/plural.js","../lib/components/message.js","../lib/index.js"],"sourcesContent":["export var TYPE;\n(function (TYPE) {\n    /**\n     * Raw text\n     */\n    TYPE[TYPE[\"literal\"] = 0] = \"literal\";\n    /**\n     * Variable w/o any format, e.g `var` in `this is a {var}`\n     */\n    TYPE[TYPE[\"argument\"] = 1] = \"argument\";\n    /**\n     * Variable w/ number format\n     */\n    TYPE[TYPE[\"number\"] = 2] = \"number\";\n    /**\n     * Variable w/ date format\n     */\n    TYPE[TYPE[\"date\"] = 3] = \"date\";\n    /**\n     * Variable w/ time format\n     */\n    TYPE[TYPE[\"time\"] = 4] = \"time\";\n    /**\n     * Variable w/ select format\n     */\n    TYPE[TYPE[\"select\"] = 5] = \"select\";\n    /**\n     * Variable w/ plural format\n     */\n    TYPE[TYPE[\"plural\"] = 6] = \"plural\";\n    /**\n     * Only possible within plural argument.\n     * This is the `#` symbol that will be substituted with the count.\n     */\n    TYPE[TYPE[\"pound\"] = 7] = \"pound\";\n    /**\n     * XML-like tag\n     */\n    TYPE[TYPE[\"tag\"] = 8] = \"tag\";\n})(TYPE || (TYPE = {}));\nexport var SKELETON_TYPE;\n(function (SKELETON_TYPE) {\n    SKELETON_TYPE[SKELETON_TYPE[\"number\"] = 0] = \"number\";\n    SKELETON_TYPE[SKELETON_TYPE[\"dateTime\"] = 1] = \"dateTime\";\n})(SKELETON_TYPE || (SKELETON_TYPE = {}));\n/**\n * Type Guards\n */\nexport function isLiteralElement(el) {\n    return el.type === TYPE.literal;\n}\nexport function isArgumentElement(el) {\n    return el.type === TYPE.argument;\n}\nexport function isNumberElement(el) {\n    return el.type === TYPE.number;\n}\nexport function isDateElement(el) {\n    return el.type === TYPE.date;\n}\nexport function isTimeElement(el) {\n    return el.type === TYPE.time;\n}\nexport function isSelectElement(el) {\n    return el.type === TYPE.select;\n}\nexport function isPluralElement(el) {\n    return el.type === TYPE.plural;\n}\nexport function isPoundElement(el) {\n    return el.type === TYPE.pound;\n}\nexport function isTagElement(el) {\n    return el.type === TYPE.tag;\n}\nexport function isNumberSkeleton(el) {\n    return !!(el && typeof el === 'object' && el.type === 0 /* number */);\n}\nexport function isDateTimeSkeleton(el) {\n    return !!(el && typeof el === 'object' && el.type === 1 /* dateTime */);\n}\nexport function createLiteralElement(value) {\n    return {\n        type: TYPE.literal,\n        value: value,\n    };\n}\nexport function createNumberElement(value, style) {\n    return {\n        type: TYPE.number,\n        value: value,\n        style: style,\n    };\n}\n//# sourceMappingURL=types.js.map","// tslint:disable:only-arrow-functions\n// tslint:disable:object-literal-shorthand\n// tslint:disable:trailing-comma\n// tslint:disable:object-literal-sort-keys\n// tslint:disable:one-variable-per-declaration\n// tslint:disable:max-line-length\n// tslint:disable:no-consecutive-blank-lines\n// tslint:disable:align\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\n// Generated by PEG.js v. 0.10.0 (ts-pegjs plugin v. 0.2.6 )\n//\n// https://pegjs.org/   https://github.com/metadevpro/ts-pegjs\nimport { TYPE, } from './types';\nvar SyntaxError = /** @class */ (function (_super) {\n    __extends(SyntaxError, _super);\n    function SyntaxError(message, expected, found, location) {\n        var _this = _super.call(this) || this;\n        _this.message = message;\n        _this.expected = expected;\n        _this.found = found;\n        _this.location = location;\n        _this.name = \"SyntaxError\";\n        if (typeof Error.captureStackTrace === \"function\") {\n            Error.captureStackTrace(_this, SyntaxError);\n        }\n        return _this;\n    }\n    SyntaxError.buildMessage = function (expected, found) {\n        function hex(ch) {\n            return ch.charCodeAt(0).toString(16).toUpperCase();\n        }\n        function literalEscape(s) {\n            return s\n                .replace(/\\\\/g, \"\\\\\\\\\")\n                .replace(/\"/g, \"\\\\\\\"\")\n                .replace(/\\0/g, \"\\\\0\")\n                .replace(/\\t/g, \"\\\\t\")\n                .replace(/\\n/g, \"\\\\n\")\n                .replace(/\\r/g, \"\\\\r\")\n                .replace(/[\\x00-\\x0F]/g, function (ch) { return \"\\\\x0\" + hex(ch); })\n                .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function (ch) { return \"\\\\x\" + hex(ch); });\n        }\n        function classEscape(s) {\n            return s\n                .replace(/\\\\/g, \"\\\\\\\\\")\n                .replace(/\\]/g, \"\\\\]\")\n                .replace(/\\^/g, \"\\\\^\")\n                .replace(/-/g, \"\\\\-\")\n                .replace(/\\0/g, \"\\\\0\")\n                .replace(/\\t/g, \"\\\\t\")\n                .replace(/\\n/g, \"\\\\n\")\n                .replace(/\\r/g, \"\\\\r\")\n                .replace(/[\\x00-\\x0F]/g, function (ch) { return \"\\\\x0\" + hex(ch); })\n                .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function (ch) { return \"\\\\x\" + hex(ch); });\n        }\n        function describeExpectation(expectation) {\n            switch (expectation.type) {\n                case \"literal\":\n                    return \"\\\"\" + literalEscape(expectation.text) + \"\\\"\";\n                case \"class\":\n                    var escapedParts = expectation.parts.map(function (part) {\n                        return Array.isArray(part)\n                            ? classEscape(part[0]) + \"-\" + classEscape(part[1])\n                            : classEscape(part);\n                    });\n                    return \"[\" + (expectation.inverted ? \"^\" : \"\") + escapedParts + \"]\";\n                case \"any\":\n                    return \"any character\";\n                case \"end\":\n                    return \"end of input\";\n                case \"other\":\n                    return expectation.description;\n            }\n        }\n        function describeExpected(expected1) {\n            var descriptions = expected1.map(describeExpectation);\n            var i;\n            var j;\n            descriptions.sort();\n            if (descriptions.length > 0) {\n                for (i = 1, j = 1; i < descriptions.length; i++) {\n                    if (descriptions[i - 1] !== descriptions[i]) {\n                        descriptions[j] = descriptions[i];\n                        j++;\n                    }\n                }\n                descriptions.length = j;\n            }\n            switch (descriptions.length) {\n                case 1:\n                    return descriptions[0];\n                case 2:\n                    return descriptions[0] + \" or \" + descriptions[1];\n                default:\n                    return descriptions.slice(0, -1).join(\", \")\n                        + \", or \"\n                        + descriptions[descriptions.length - 1];\n            }\n        }\n        function describeFound(found1) {\n            return found1 ? \"\\\"\" + literalEscape(found1) + \"\\\"\" : \"end of input\";\n        }\n        return \"Expected \" + describeExpected(expected) + \" but \" + describeFound(found) + \" found.\";\n    };\n    return SyntaxError;\n}(Error));\nexport { SyntaxError };\nfunction peg$parse(input, options) {\n    options = options !== undefined ? options : {};\n    var peg$FAILED = {};\n    var peg$startRuleFunctions = { start: peg$parsestart };\n    var peg$startRuleFunction = peg$parsestart;\n    var peg$c0 = function (parts) {\n        return parts.join('');\n    };\n    var peg$c1 = function (messageText) {\n        return __assign({ type: TYPE.literal, value: messageText }, insertLocation());\n    };\n    var peg$c2 = \"#\";\n    var peg$c3 = peg$literalExpectation(\"#\", false);\n    var peg$c4 = function () {\n        return __assign({ type: TYPE.pound }, insertLocation());\n    };\n    var peg$c5 = peg$otherExpectation(\"tagElement\");\n    var peg$c6 = \"<\";\n    var peg$c7 = peg$literalExpectation(\"<\", false);\n    var peg$c8 = \"/>\";\n    var peg$c9 = peg$literalExpectation(\"/>\", false);\n    var peg$c10 = function (value) {\n        return __assign({ type: TYPE.literal, value: value.join('') }, insertLocation());\n    };\n    var peg$c11 = function (open, children, close) {\n        if (open !== close) {\n            error(\"Mismatch tag \\\"\" + open + \"\\\" !== \\\"\" + close + \"\\\"\", location());\n        }\n        return __assign({ type: TYPE.tag, value: open, children: children }, insertLocation());\n    };\n    var peg$c12 = function () { messageCtx.push('openingTag'); return true; };\n    var peg$c13 = \">\";\n    var peg$c14 = peg$literalExpectation(\">\", false);\n    var peg$c15 = function (tag) { messageCtx.pop(); return true; };\n    var peg$c16 = function (tag) {\n        return tag;\n    };\n    var peg$c17 = \"</\";\n    var peg$c18 = peg$literalExpectation(\"</\", false);\n    var peg$c19 = function () { messageCtx.push('closingTag'); return true; };\n    var peg$c20 = peg$otherExpectation(\"argumentElement\");\n    var peg$c21 = \"{\";\n    var peg$c22 = peg$literalExpectation(\"{\", false);\n    var peg$c23 = \"}\";\n    var peg$c24 = peg$literalExpectation(\"}\", false);\n    var peg$c25 = function (value) {\n        return __assign({ type: TYPE.argument, value: value }, insertLocation());\n    };\n    var peg$c26 = peg$otherExpectation(\"numberSkeletonId\");\n    var peg$c27 = /^['\\/{}]/;\n    var peg$c28 = peg$classExpectation([\"'\", \"/\", \"{\", \"}\"], false, false);\n    var peg$c29 = peg$anyExpectation();\n    var peg$c30 = peg$otherExpectation(\"numberSkeletonTokenOption\");\n    var peg$c31 = \"/\";\n    var peg$c32 = peg$literalExpectation(\"/\", false);\n    var peg$c33 = function (option) { return option; };\n    var peg$c34 = peg$otherExpectation(\"numberSkeletonToken\");\n    var peg$c35 = function (stem, options) {\n        return { stem: stem, options: options };\n    };\n    var peg$c36 = function (tokens) {\n        return __assign({ type: 0 /* number */, tokens: tokens }, insertLocation());\n    };\n    var peg$c37 = \"::\";\n    var peg$c38 = peg$literalExpectation(\"::\", false);\n    var peg$c39 = function (skeleton) { return skeleton; };\n    var peg$c40 = function () { messageCtx.push('numberArgStyle'); return true; };\n    var peg$c41 = function (style) {\n        messageCtx.pop();\n        return style.replace(/\\s*$/, '');\n    };\n    var peg$c42 = \",\";\n    var peg$c43 = peg$literalExpectation(\",\", false);\n    var peg$c44 = \"number\";\n    var peg$c45 = peg$literalExpectation(\"number\", false);\n    var peg$c46 = function (value, type, style) {\n        return __assign({ type: type === 'number' ? TYPE.number : type === 'date' ? TYPE.date : TYPE.time, style: style && style[2], value: value }, insertLocation());\n    };\n    var peg$c47 = \"'\";\n    var peg$c48 = peg$literalExpectation(\"'\", false);\n    var peg$c49 = /^[^']/;\n    var peg$c50 = peg$classExpectation([\"'\"], true, false);\n    var peg$c51 = /^[^a-zA-Z'{}]/;\n    var peg$c52 = peg$classExpectation([[\"a\", \"z\"], [\"A\", \"Z\"], \"'\", \"{\", \"}\"], true, false);\n    var peg$c53 = /^[a-zA-Z]/;\n    var peg$c54 = peg$classExpectation([[\"a\", \"z\"], [\"A\", \"Z\"]], false, false);\n    var peg$c55 = function (pattern) {\n        return __assign({ type: 1 /* dateTime */, pattern: pattern }, insertLocation());\n    };\n    var peg$c56 = function () { messageCtx.push('dateOrTimeArgStyle'); return true; };\n    var peg$c57 = \"date\";\n    var peg$c58 = peg$literalExpectation(\"date\", false);\n    var peg$c59 = \"time\";\n    var peg$c60 = peg$literalExpectation(\"time\", false);\n    var peg$c61 = \"plural\";\n    var peg$c62 = peg$literalExpectation(\"plural\", false);\n    var peg$c63 = \"selectordinal\";\n    var peg$c64 = peg$literalExpectation(\"selectordinal\", false);\n    var peg$c65 = \"offset:\";\n    var peg$c66 = peg$literalExpectation(\"offset:\", false);\n    var peg$c67 = function (value, pluralType, offset, options) {\n        return __assign({ type: TYPE.plural, pluralType: pluralType === 'plural' ? 'cardinal' : 'ordinal', value: value, offset: offset ? offset[2] : 0, options: options.reduce(function (all, _a) {\n                var id = _a.id, value = _a.value, optionLocation = _a.location;\n                if (id in all) {\n                    error(\"Duplicate option \\\"\" + id + \"\\\" in plural element: \\\"\" + text() + \"\\\"\", location());\n                }\n                all[id] = {\n                    value: value,\n                    location: optionLocation\n                };\n                return all;\n            }, {}) }, insertLocation());\n    };\n    var peg$c68 = \"select\";\n    var peg$c69 = peg$literalExpectation(\"select\", false);\n    var peg$c70 = function (value, options) {\n        return __assign({ type: TYPE.select, value: value, options: options.reduce(function (all, _a) {\n                var id = _a.id, value = _a.value, optionLocation = _a.location;\n                if (id in all) {\n                    error(\"Duplicate option \\\"\" + id + \"\\\" in select element: \\\"\" + text() + \"\\\"\", location());\n                }\n                all[id] = {\n                    value: value,\n                    location: optionLocation\n                };\n                return all;\n            }, {}) }, insertLocation());\n    };\n    var peg$c71 = \"=\";\n    var peg$c72 = peg$literalExpectation(\"=\", false);\n    var peg$c73 = function (id) { messageCtx.push('select'); return true; };\n    var peg$c74 = function (id, value) {\n        messageCtx.pop();\n        return __assign({ id: id,\n            value: value }, insertLocation());\n    };\n    var peg$c75 = function (id) { messageCtx.push('plural'); return true; };\n    var peg$c76 = function (id, value) {\n        messageCtx.pop();\n        return __assign({ id: id,\n            value: value }, insertLocation());\n    };\n    var peg$c77 = peg$otherExpectation(\"whitespace\");\n    var peg$c78 = /^[\\t-\\r \\x85\\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000]/;\n    var peg$c79 = peg$classExpectation([[\"\\t\", \"\\r\"], \" \", \"\\x85\", \"\\xA0\", \"\\u1680\", [\"\\u2000\", \"\\u200A\"], \"\\u2028\", \"\\u2029\", \"\\u202F\", \"\\u205F\", \"\\u3000\"], false, false);\n    var peg$c80 = peg$otherExpectation(\"syntax pattern\");\n    var peg$c81 = /^[!-\\/:-@[-\\^`{-~\\xA1-\\xA7\\xA9\\xAB\\xAC\\xAE\\xB0\\xB1\\xB6\\xBB\\xBF\\xD7\\xF7\\u2010-\\u2027\\u2030-\\u203E\\u2041-\\u2053\\u2055-\\u205E\\u2190-\\u245F\\u2500-\\u2775\\u2794-\\u2BFF\\u2E00-\\u2E7F\\u3001-\\u3003\\u3008-\\u3020\\u3030\\uFD3E\\uFD3F\\uFE45\\uFE46]/;\n    var peg$c82 = peg$classExpectation([[\"!\", \"/\"], [\":\", \"@\"], [\"[\", \"^\"], \"`\", [\"{\", \"~\"], [\"\\xA1\", \"\\xA7\"], \"\\xA9\", \"\\xAB\", \"\\xAC\", \"\\xAE\", \"\\xB0\", \"\\xB1\", \"\\xB6\", \"\\xBB\", \"\\xBF\", \"\\xD7\", \"\\xF7\", [\"\\u2010\", \"\\u2027\"], [\"\\u2030\", \"\\u203E\"], [\"\\u2041\", \"\\u2053\"], [\"\\u2055\", \"\\u205E\"], [\"\\u2190\", \"\\u245F\"], [\"\\u2500\", \"\\u2775\"], [\"\\u2794\", \"\\u2BFF\"], [\"\\u2E00\", \"\\u2E7F\"], [\"\\u3001\", \"\\u3003\"], [\"\\u3008\", \"\\u3020\"], \"\\u3030\", \"\\uFD3E\", \"\\uFD3F\", \"\\uFE45\", \"\\uFE46\"], false, false);\n    var peg$c83 = peg$otherExpectation(\"optional whitespace\");\n    var peg$c84 = peg$otherExpectation(\"number\");\n    var peg$c85 = \"-\";\n    var peg$c86 = peg$literalExpectation(\"-\", false);\n    var peg$c87 = function (negative, num) {\n        return num\n            ? negative\n                ? -num\n                : num\n            : 0;\n    };\n    var peg$c88 = peg$otherExpectation(\"apostrophe\");\n    var peg$c89 = peg$otherExpectation(\"double apostrophes\");\n    var peg$c90 = \"''\";\n    var peg$c91 = peg$literalExpectation(\"''\", false);\n    var peg$c92 = function () { return \"'\"; };\n    var peg$c93 = function (escapedChar, quotedChars) {\n        return escapedChar + quotedChars.replace(\"''\", \"'\");\n    };\n    var peg$c94 = function (x) {\n        return (x !== '<' &&\n            x !== '{' &&\n            !(isInPluralOption() && x === '#') &&\n            !(isNestedMessageText() && x === '}') &&\n            !(isNestedMessageText() && x === '>'));\n    };\n    var peg$c95 = \"\\n\";\n    var peg$c96 = peg$literalExpectation(\"\\n\", false);\n    var peg$c97 = function (x) {\n        return x === '<' || x === '>' || x === '{' || x === '}' || (isInPluralOption() && x === '#');\n    };\n    var peg$c98 = peg$otherExpectation(\"argNameOrNumber\");\n    var peg$c99 = peg$otherExpectation(\"validTag\");\n    var peg$c100 = peg$otherExpectation(\"argNumber\");\n    var peg$c101 = \"0\";\n    var peg$c102 = peg$literalExpectation(\"0\", false);\n    var peg$c103 = function () { return 0; };\n    var peg$c104 = /^[1-9]/;\n    var peg$c105 = peg$classExpectation([[\"1\", \"9\"]], false, false);\n    var peg$c106 = /^[0-9]/;\n    var peg$c107 = peg$classExpectation([[\"0\", \"9\"]], false, false);\n    var peg$c108 = function (digits) {\n        return parseInt(digits.join(''), 10);\n    };\n    var peg$c109 = peg$otherExpectation(\"argName\");\n    var peg$c110 = peg$otherExpectation(\"tagName\");\n    var peg$currPos = 0;\n    var peg$savedPos = 0;\n    var peg$posDetailsCache = [{ line: 1, column: 1 }];\n    var peg$maxFailPos = 0;\n    var peg$maxFailExpected = [];\n    var peg$silentFails = 0;\n    var peg$result;\n    if (options.startRule !== undefined) {\n        if (!(options.startRule in peg$startRuleFunctions)) {\n            throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n        }\n        peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n    }\n    function text() {\n        return input.substring(peg$savedPos, peg$currPos);\n    }\n    function location() {\n        return peg$computeLocation(peg$savedPos, peg$currPos);\n    }\n    function expected(description, location1) {\n        location1 = location1 !== undefined\n            ? location1\n            : peg$computeLocation(peg$savedPos, peg$currPos);\n        throw peg$buildStructuredError([peg$otherExpectation(description)], input.substring(peg$savedPos, peg$currPos), location1);\n    }\n    function error(message, location1) {\n        location1 = location1 !== undefined\n            ? location1\n            : peg$computeLocation(peg$savedPos, peg$currPos);\n        throw peg$buildSimpleError(message, location1);\n    }\n    function peg$literalExpectation(text1, ignoreCase) {\n        return { type: \"literal\", text: text1, ignoreCase: ignoreCase };\n    }\n    function peg$classExpectation(parts, inverted, ignoreCase) {\n        return { type: \"class\", parts: parts, inverted: inverted, ignoreCase: ignoreCase };\n    }\n    function peg$anyExpectation() {\n        return { type: \"any\" };\n    }\n    function peg$endExpectation() {\n        return { type: \"end\" };\n    }\n    function peg$otherExpectation(description) {\n        return { type: \"other\", description: description };\n    }\n    function peg$computePosDetails(pos) {\n        var details = peg$posDetailsCache[pos];\n        var p;\n        if (details) {\n            return details;\n        }\n        else {\n            p = pos - 1;\n            while (!peg$posDetailsCache[p]) {\n                p--;\n            }\n            details = peg$posDetailsCache[p];\n            details = {\n                line: details.line,\n                column: details.column\n            };\n            while (p < pos) {\n                if (input.charCodeAt(p) === 10) {\n                    details.line++;\n                    details.column = 1;\n                }\n                else {\n                    details.column++;\n                }\n                p++;\n            }\n            peg$posDetailsCache[pos] = details;\n            return details;\n        }\n    }\n    function peg$computeLocation(startPos, endPos) {\n        var startPosDetails = peg$computePosDetails(startPos);\n        var endPosDetails = peg$computePosDetails(endPos);\n        return {\n            start: {\n                offset: startPos,\n                line: startPosDetails.line,\n                column: startPosDetails.column\n            },\n            end: {\n                offset: endPos,\n                line: endPosDetails.line,\n                column: endPosDetails.column\n            }\n        };\n    }\n    function peg$fail(expected1) {\n        if (peg$currPos < peg$maxFailPos) {\n            return;\n        }\n        if (peg$currPos > peg$maxFailPos) {\n            peg$maxFailPos = peg$currPos;\n            peg$maxFailExpected = [];\n        }\n        peg$maxFailExpected.push(expected1);\n    }\n    function peg$buildSimpleError(message, location1) {\n        return new SyntaxError(message, [], \"\", location1);\n    }\n    function peg$buildStructuredError(expected1, found, location1) {\n        return new SyntaxError(SyntaxError.buildMessage(expected1, found), expected1, found, location1);\n    }\n    function peg$parsestart() {\n        var s0;\n        s0 = peg$parsemessage();\n        return s0;\n    }\n    function peg$parsemessage() {\n        var s0, s1;\n        s0 = [];\n        s1 = peg$parsemessageElement();\n        while (s1 !== peg$FAILED) {\n            s0.push(s1);\n            s1 = peg$parsemessageElement();\n        }\n        return s0;\n    }\n    function peg$parsemessageElement() {\n        var s0;\n        s0 = peg$parseliteralElement();\n        if (s0 === peg$FAILED) {\n            s0 = peg$parseargumentElement();\n            if (s0 === peg$FAILED) {\n                s0 = peg$parsesimpleFormatElement();\n                if (s0 === peg$FAILED) {\n                    s0 = peg$parsepluralElement();\n                    if (s0 === peg$FAILED) {\n                        s0 = peg$parseselectElement();\n                        if (s0 === peg$FAILED) {\n                            s0 = peg$parsetagElement();\n                            if (s0 === peg$FAILED) {\n                                s0 = peg$parsepoundElement();\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return s0;\n    }\n    function peg$parsemessageText() {\n        var s0, s1, s2;\n        s0 = peg$currPos;\n        s1 = [];\n        s2 = peg$parsedoubleApostrophes();\n        if (s2 === peg$FAILED) {\n            s2 = peg$parsequotedString();\n            if (s2 === peg$FAILED) {\n                s2 = peg$parseunquotedString();\n            }\n        }\n        if (s2 !== peg$FAILED) {\n            while (s2 !== peg$FAILED) {\n                s1.push(s2);\n                s2 = peg$parsedoubleApostrophes();\n                if (s2 === peg$FAILED) {\n                    s2 = peg$parsequotedString();\n                    if (s2 === peg$FAILED) {\n                        s2 = peg$parseunquotedString();\n                    }\n                }\n            }\n        }\n        else {\n            s1 = peg$FAILED;\n        }\n        if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c0(s1);\n        }\n        s0 = s1;\n        return s0;\n    }\n    function peg$parseliteralElement() {\n        var s0, s1;\n        s0 = peg$currPos;\n        s1 = peg$parsemessageText();\n        if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c1(s1);\n        }\n        s0 = s1;\n        return s0;\n    }\n    function peg$parsepoundElement() {\n        var s0, s1;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 35) {\n            s1 = peg$c2;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c3);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c4();\n        }\n        s0 = s1;\n        return s0;\n    }\n    function peg$parsetagElement() {\n        var s0, s1, s2, s3, s4, s5;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        s1 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 60) {\n            s2 = peg$c6;\n            peg$currPos++;\n        }\n        else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c7);\n            }\n        }\n        if (s2 !== peg$FAILED) {\n            s3 = peg$parsevalidTag();\n            if (s3 !== peg$FAILED) {\n                s4 = peg$parse_();\n                if (s4 !== peg$FAILED) {\n                    if (input.substr(peg$currPos, 2) === peg$c8) {\n                        s5 = peg$c8;\n                        peg$currPos += 2;\n                    }\n                    else {\n                        s5 = peg$FAILED;\n                        if (peg$silentFails === 0) {\n                            peg$fail(peg$c9);\n                        }\n                    }\n                    if (s5 !== peg$FAILED) {\n                        s2 = [s2, s3, s4, s5];\n                        s1 = s2;\n                    }\n                    else {\n                        peg$currPos = s1;\n                        s1 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s1;\n                    s1 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s1;\n                s1 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s1;\n            s1 = peg$FAILED;\n        }\n        if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c10(s1);\n        }\n        s0 = s1;\n        if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            s1 = peg$parseopeningTag();\n            if (s1 !== peg$FAILED) {\n                s2 = peg$parsemessage();\n                if (s2 !== peg$FAILED) {\n                    s3 = peg$parseclosingTag();\n                    if (s3 !== peg$FAILED) {\n                        peg$savedPos = s0;\n                        s1 = peg$c11(s1, s2, s3);\n                        s0 = s1;\n                    }\n                    else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c5);\n            }\n        }\n        return s0;\n    }\n    function peg$parseopeningTag() {\n        var s0, s1, s2, s3, s4, s5;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 60) {\n            s1 = peg$c6;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c7);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            peg$savedPos = peg$currPos;\n            s2 = peg$c12();\n            if (s2) {\n                s2 = undefined;\n            }\n            else {\n                s2 = peg$FAILED;\n            }\n            if (s2 !== peg$FAILED) {\n                s3 = peg$parsevalidTag();\n                if (s3 !== peg$FAILED) {\n                    if (input.charCodeAt(peg$currPos) === 62) {\n                        s4 = peg$c13;\n                        peg$currPos++;\n                    }\n                    else {\n                        s4 = peg$FAILED;\n                        if (peg$silentFails === 0) {\n                            peg$fail(peg$c14);\n                        }\n                    }\n                    if (s4 !== peg$FAILED) {\n                        peg$savedPos = peg$currPos;\n                        s5 = peg$c15(s3);\n                        if (s5) {\n                            s5 = undefined;\n                        }\n                        else {\n                            s5 = peg$FAILED;\n                        }\n                        if (s5 !== peg$FAILED) {\n                            peg$savedPos = s0;\n                            s1 = peg$c16(s3);\n                            s0 = s1;\n                        }\n                        else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                        }\n                    }\n                    else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        return s0;\n    }\n    function peg$parseclosingTag() {\n        var s0, s1, s2, s3, s4, s5;\n        s0 = peg$currPos;\n        if (input.substr(peg$currPos, 2) === peg$c17) {\n            s1 = peg$c17;\n            peg$currPos += 2;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c18);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            peg$savedPos = peg$currPos;\n            s2 = peg$c19();\n            if (s2) {\n                s2 = undefined;\n            }\n            else {\n                s2 = peg$FAILED;\n            }\n            if (s2 !== peg$FAILED) {\n                s3 = peg$parsevalidTag();\n                if (s3 !== peg$FAILED) {\n                    if (input.charCodeAt(peg$currPos) === 62) {\n                        s4 = peg$c13;\n                        peg$currPos++;\n                    }\n                    else {\n                        s4 = peg$FAILED;\n                        if (peg$silentFails === 0) {\n                            peg$fail(peg$c14);\n                        }\n                    }\n                    if (s4 !== peg$FAILED) {\n                        peg$savedPos = peg$currPos;\n                        s5 = peg$c15(s3);\n                        if (s5) {\n                            s5 = undefined;\n                        }\n                        else {\n                            s5 = peg$FAILED;\n                        }\n                        if (s5 !== peg$FAILED) {\n                            peg$savedPos = s0;\n                            s1 = peg$c16(s3);\n                            s0 = s1;\n                        }\n                        else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                        }\n                    }\n                    else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        return s0;\n    }\n    function peg$parseargumentElement() {\n        var s0, s1, s2, s3, s4, s5;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 123) {\n            s1 = peg$c21;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c22);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parse_();\n            if (s2 !== peg$FAILED) {\n                s3 = peg$parseargNameOrNumber();\n                if (s3 !== peg$FAILED) {\n                    s4 = peg$parse_();\n                    if (s4 !== peg$FAILED) {\n                        if (input.charCodeAt(peg$currPos) === 125) {\n                            s5 = peg$c23;\n                            peg$currPos++;\n                        }\n                        else {\n                            s5 = peg$FAILED;\n                            if (peg$silentFails === 0) {\n                                peg$fail(peg$c24);\n                            }\n                        }\n                        if (s5 !== peg$FAILED) {\n                            peg$savedPos = s0;\n                            s1 = peg$c25(s3);\n                            s0 = s1;\n                        }\n                        else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                        }\n                    }\n                    else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c20);\n            }\n        }\n        return s0;\n    }\n    function peg$parsenumberSkeletonId() {\n        var s0, s1, s2, s3, s4;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        s1 = [];\n        s2 = peg$currPos;\n        s3 = peg$currPos;\n        peg$silentFails++;\n        s4 = peg$parsewhiteSpace();\n        if (s4 === peg$FAILED) {\n            if (peg$c27.test(input.charAt(peg$currPos))) {\n                s4 = input.charAt(peg$currPos);\n                peg$currPos++;\n            }\n            else {\n                s4 = peg$FAILED;\n                if (peg$silentFails === 0) {\n                    peg$fail(peg$c28);\n                }\n            }\n        }\n        peg$silentFails--;\n        if (s4 === peg$FAILED) {\n            s3 = undefined;\n        }\n        else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n            if (input.length > peg$currPos) {\n                s4 = input.charAt(peg$currPos);\n                peg$currPos++;\n            }\n            else {\n                s4 = peg$FAILED;\n                if (peg$silentFails === 0) {\n                    peg$fail(peg$c29);\n                }\n            }\n            if (s4 !== peg$FAILED) {\n                s3 = [s3, s4];\n                s2 = s3;\n            }\n            else {\n                peg$currPos = s2;\n                s2 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s2;\n            s2 = peg$FAILED;\n        }\n        if (s2 !== peg$FAILED) {\n            while (s2 !== peg$FAILED) {\n                s1.push(s2);\n                s2 = peg$currPos;\n                s3 = peg$currPos;\n                peg$silentFails++;\n                s4 = peg$parsewhiteSpace();\n                if (s4 === peg$FAILED) {\n                    if (peg$c27.test(input.charAt(peg$currPos))) {\n                        s4 = input.charAt(peg$currPos);\n                        peg$currPos++;\n                    }\n                    else {\n                        s4 = peg$FAILED;\n                        if (peg$silentFails === 0) {\n                            peg$fail(peg$c28);\n                        }\n                    }\n                }\n                peg$silentFails--;\n                if (s4 === peg$FAILED) {\n                    s3 = undefined;\n                }\n                else {\n                    peg$currPos = s3;\n                    s3 = peg$FAILED;\n                }\n                if (s3 !== peg$FAILED) {\n                    if (input.length > peg$currPos) {\n                        s4 = input.charAt(peg$currPos);\n                        peg$currPos++;\n                    }\n                    else {\n                        s4 = peg$FAILED;\n                        if (peg$silentFails === 0) {\n                            peg$fail(peg$c29);\n                        }\n                    }\n                    if (s4 !== peg$FAILED) {\n                        s3 = [s3, s4];\n                        s2 = s3;\n                    }\n                    else {\n                        peg$currPos = s2;\n                        s2 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s2;\n                    s2 = peg$FAILED;\n                }\n            }\n        }\n        else {\n            s1 = peg$FAILED;\n        }\n        if (s1 !== peg$FAILED) {\n            s0 = input.substring(s0, peg$currPos);\n        }\n        else {\n            s0 = s1;\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c26);\n            }\n        }\n        return s0;\n    }\n    function peg$parsenumberSkeletonTokenOption() {\n        var s0, s1, s2;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 47) {\n            s1 = peg$c31;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c32);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parsenumberSkeletonId();\n            if (s2 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c33(s2);\n                s0 = s1;\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c30);\n            }\n        }\n        return s0;\n    }\n    function peg$parsenumberSkeletonToken() {\n        var s0, s1, s2, s3, s4;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        s1 = peg$parse_();\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parsenumberSkeletonId();\n            if (s2 !== peg$FAILED) {\n                s3 = [];\n                s4 = peg$parsenumberSkeletonTokenOption();\n                while (s4 !== peg$FAILED) {\n                    s3.push(s4);\n                    s4 = peg$parsenumberSkeletonTokenOption();\n                }\n                if (s3 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c35(s2, s3);\n                    s0 = s1;\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c34);\n            }\n        }\n        return s0;\n    }\n    function peg$parsenumberSkeleton() {\n        var s0, s1, s2;\n        s0 = peg$currPos;\n        s1 = [];\n        s2 = peg$parsenumberSkeletonToken();\n        if (s2 !== peg$FAILED) {\n            while (s2 !== peg$FAILED) {\n                s1.push(s2);\n                s2 = peg$parsenumberSkeletonToken();\n            }\n        }\n        else {\n            s1 = peg$FAILED;\n        }\n        if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c36(s1);\n        }\n        s0 = s1;\n        return s0;\n    }\n    function peg$parsenumberArgStyle() {\n        var s0, s1, s2;\n        s0 = peg$currPos;\n        if (input.substr(peg$currPos, 2) === peg$c37) {\n            s1 = peg$c37;\n            peg$currPos += 2;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c38);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parsenumberSkeleton();\n            if (s2 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c39(s2);\n                s0 = s1;\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            peg$savedPos = peg$currPos;\n            s1 = peg$c40();\n            if (s1) {\n                s1 = undefined;\n            }\n            else {\n                s1 = peg$FAILED;\n            }\n            if (s1 !== peg$FAILED) {\n                s2 = peg$parsemessageText();\n                if (s2 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c41(s2);\n                    s0 = s1;\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        return s0;\n    }\n    function peg$parsenumberFormatElement() {\n        var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 123) {\n            s1 = peg$c21;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c22);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parse_();\n            if (s2 !== peg$FAILED) {\n                s3 = peg$parseargNameOrNumber();\n                if (s3 !== peg$FAILED) {\n                    s4 = peg$parse_();\n                    if (s4 !== peg$FAILED) {\n                        if (input.charCodeAt(peg$currPos) === 44) {\n                            s5 = peg$c42;\n                            peg$currPos++;\n                        }\n                        else {\n                            s5 = peg$FAILED;\n                            if (peg$silentFails === 0) {\n                                peg$fail(peg$c43);\n                            }\n                        }\n                        if (s5 !== peg$FAILED) {\n                            s6 = peg$parse_();\n                            if (s6 !== peg$FAILED) {\n                                if (input.substr(peg$currPos, 6) === peg$c44) {\n                                    s7 = peg$c44;\n                                    peg$currPos += 6;\n                                }\n                                else {\n                                    s7 = peg$FAILED;\n                                    if (peg$silentFails === 0) {\n                                        peg$fail(peg$c45);\n                                    }\n                                }\n                                if (s7 !== peg$FAILED) {\n                                    s8 = peg$parse_();\n                                    if (s8 !== peg$FAILED) {\n                                        s9 = peg$currPos;\n                                        if (input.charCodeAt(peg$currPos) === 44) {\n                                            s10 = peg$c42;\n                                            peg$currPos++;\n                                        }\n                                        else {\n                                            s10 = peg$FAILED;\n                                            if (peg$silentFails === 0) {\n                                                peg$fail(peg$c43);\n                                            }\n                                        }\n                                        if (s10 !== peg$FAILED) {\n                                            s11 = peg$parse_();\n                                            if (s11 !== peg$FAILED) {\n                                                s12 = peg$parsenumberArgStyle();\n                                                if (s12 !== peg$FAILED) {\n                                                    s10 = [s10, s11, s12];\n                                                    s9 = s10;\n                                                }\n                                                else {\n                                                    peg$currPos = s9;\n                                                    s9 = peg$FAILED;\n                                                }\n                                            }\n                                            else {\n                                                peg$currPos = s9;\n                                                s9 = peg$FAILED;\n                                            }\n                                        }\n                                        else {\n                                            peg$currPos = s9;\n                                            s9 = peg$FAILED;\n                                        }\n                                        if (s9 === peg$FAILED) {\n                                            s9 = null;\n                                        }\n                                        if (s9 !== peg$FAILED) {\n                                            s10 = peg$parse_();\n                                            if (s10 !== peg$FAILED) {\n                                                if (input.charCodeAt(peg$currPos) === 125) {\n                                                    s11 = peg$c23;\n                                                    peg$currPos++;\n                                                }\n                                                else {\n                                                    s11 = peg$FAILED;\n                                                    if (peg$silentFails === 0) {\n                                                        peg$fail(peg$c24);\n                                                    }\n                                                }\n                                                if (s11 !== peg$FAILED) {\n                                                    peg$savedPos = s0;\n                                                    s1 = peg$c46(s3, s7, s9);\n                                                    s0 = s1;\n                                                }\n                                                else {\n                                                    peg$currPos = s0;\n                                                    s0 = peg$FAILED;\n                                                }\n                                            }\n                                            else {\n                                                peg$currPos = s0;\n                                                s0 = peg$FAILED;\n                                            }\n                                        }\n                                        else {\n                                            peg$currPos = s0;\n                                            s0 = peg$FAILED;\n                                        }\n                                    }\n                                    else {\n                                        peg$currPos = s0;\n                                        s0 = peg$FAILED;\n                                    }\n                                }\n                                else {\n                                    peg$currPos = s0;\n                                    s0 = peg$FAILED;\n                                }\n                            }\n                            else {\n                                peg$currPos = s0;\n                                s0 = peg$FAILED;\n                            }\n                        }\n                        else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                        }\n                    }\n                    else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        return s0;\n    }\n    function peg$parsedateTimeSkeletonLiteral() {\n        var s0, s1, s2, s3;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 39) {\n            s1 = peg$c47;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c48);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = [];\n            s3 = peg$parsedoubleApostrophes();\n            if (s3 === peg$FAILED) {\n                if (peg$c49.test(input.charAt(peg$currPos))) {\n                    s3 = input.charAt(peg$currPos);\n                    peg$currPos++;\n                }\n                else {\n                    s3 = peg$FAILED;\n                    if (peg$silentFails === 0) {\n                        peg$fail(peg$c50);\n                    }\n                }\n            }\n            if (s3 !== peg$FAILED) {\n                while (s3 !== peg$FAILED) {\n                    s2.push(s3);\n                    s3 = peg$parsedoubleApostrophes();\n                    if (s3 === peg$FAILED) {\n                        if (peg$c49.test(input.charAt(peg$currPos))) {\n                            s3 = input.charAt(peg$currPos);\n                            peg$currPos++;\n                        }\n                        else {\n                            s3 = peg$FAILED;\n                            if (peg$silentFails === 0) {\n                                peg$fail(peg$c50);\n                            }\n                        }\n                    }\n                }\n            }\n            else {\n                s2 = peg$FAILED;\n            }\n            if (s2 !== peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 39) {\n                    s3 = peg$c47;\n                    peg$currPos++;\n                }\n                else {\n                    s3 = peg$FAILED;\n                    if (peg$silentFails === 0) {\n                        peg$fail(peg$c48);\n                    }\n                }\n                if (s3 !== peg$FAILED) {\n                    s1 = [s1, s2, s3];\n                    s0 = s1;\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        if (s0 === peg$FAILED) {\n            s0 = [];\n            s1 = peg$parsedoubleApostrophes();\n            if (s1 === peg$FAILED) {\n                if (peg$c51.test(input.charAt(peg$currPos))) {\n                    s1 = input.charAt(peg$currPos);\n                    peg$currPos++;\n                }\n                else {\n                    s1 = peg$FAILED;\n                    if (peg$silentFails === 0) {\n                        peg$fail(peg$c52);\n                    }\n                }\n            }\n            if (s1 !== peg$FAILED) {\n                while (s1 !== peg$FAILED) {\n                    s0.push(s1);\n                    s1 = peg$parsedoubleApostrophes();\n                    if (s1 === peg$FAILED) {\n                        if (peg$c51.test(input.charAt(peg$currPos))) {\n                            s1 = input.charAt(peg$currPos);\n                            peg$currPos++;\n                        }\n                        else {\n                            s1 = peg$FAILED;\n                            if (peg$silentFails === 0) {\n                                peg$fail(peg$c52);\n                            }\n                        }\n                    }\n                }\n            }\n            else {\n                s0 = peg$FAILED;\n            }\n        }\n        return s0;\n    }\n    function peg$parsedateTimeSkeletonPattern() {\n        var s0, s1;\n        s0 = [];\n        if (peg$c53.test(input.charAt(peg$currPos))) {\n            s1 = input.charAt(peg$currPos);\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c54);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            while (s1 !== peg$FAILED) {\n                s0.push(s1);\n                if (peg$c53.test(input.charAt(peg$currPos))) {\n                    s1 = input.charAt(peg$currPos);\n                    peg$currPos++;\n                }\n                else {\n                    s1 = peg$FAILED;\n                    if (peg$silentFails === 0) {\n                        peg$fail(peg$c54);\n                    }\n                }\n            }\n        }\n        else {\n            s0 = peg$FAILED;\n        }\n        return s0;\n    }\n    function peg$parsedateTimeSkeleton() {\n        var s0, s1, s2, s3;\n        s0 = peg$currPos;\n        s1 = peg$currPos;\n        s2 = [];\n        s3 = peg$parsedateTimeSkeletonLiteral();\n        if (s3 === peg$FAILED) {\n            s3 = peg$parsedateTimeSkeletonPattern();\n        }\n        if (s3 !== peg$FAILED) {\n            while (s3 !== peg$FAILED) {\n                s2.push(s3);\n                s3 = peg$parsedateTimeSkeletonLiteral();\n                if (s3 === peg$FAILED) {\n                    s3 = peg$parsedateTimeSkeletonPattern();\n                }\n            }\n        }\n        else {\n            s2 = peg$FAILED;\n        }\n        if (s2 !== peg$FAILED) {\n            s1 = input.substring(s1, peg$currPos);\n        }\n        else {\n            s1 = s2;\n        }\n        if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c55(s1);\n        }\n        s0 = s1;\n        return s0;\n    }\n    function peg$parsedateOrTimeArgStyle() {\n        var s0, s1, s2;\n        s0 = peg$currPos;\n        if (input.substr(peg$currPos, 2) === peg$c37) {\n            s1 = peg$c37;\n            peg$currPos += 2;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c38);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parsedateTimeSkeleton();\n            if (s2 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c39(s2);\n                s0 = s1;\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            peg$savedPos = peg$currPos;\n            s1 = peg$c56();\n            if (s1) {\n                s1 = undefined;\n            }\n            else {\n                s1 = peg$FAILED;\n            }\n            if (s1 !== peg$FAILED) {\n                s2 = peg$parsemessageText();\n                if (s2 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c41(s2);\n                    s0 = s1;\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        return s0;\n    }\n    function peg$parsedateOrTimeFormatElement() {\n        var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 123) {\n            s1 = peg$c21;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c22);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parse_();\n            if (s2 !== peg$FAILED) {\n                s3 = peg$parseargNameOrNumber();\n                if (s3 !== peg$FAILED) {\n                    s4 = peg$parse_();\n                    if (s4 !== peg$FAILED) {\n                        if (input.charCodeAt(peg$currPos) === 44) {\n                            s5 = peg$c42;\n                            peg$currPos++;\n                        }\n                        else {\n                            s5 = peg$FAILED;\n                            if (peg$silentFails === 0) {\n                                peg$fail(peg$c43);\n                            }\n                        }\n                        if (s5 !== peg$FAILED) {\n                            s6 = peg$parse_();\n                            if (s6 !== peg$FAILED) {\n                                if (input.substr(peg$currPos, 4) === peg$c57) {\n                                    s7 = peg$c57;\n                                    peg$currPos += 4;\n                                }\n                                else {\n                                    s7 = peg$FAILED;\n                                    if (peg$silentFails === 0) {\n                                        peg$fail(peg$c58);\n                                    }\n                                }\n                                if (s7 === peg$FAILED) {\n                                    if (input.substr(peg$currPos, 4) === peg$c59) {\n                                        s7 = peg$c59;\n                                        peg$currPos += 4;\n                                    }\n                                    else {\n                                        s7 = peg$FAILED;\n                                        if (peg$silentFails === 0) {\n                                            peg$fail(peg$c60);\n                                        }\n                                    }\n                                }\n                                if (s7 !== peg$FAILED) {\n                                    s8 = peg$parse_();\n                                    if (s8 !== peg$FAILED) {\n                                        s9 = peg$currPos;\n                                        if (input.charCodeAt(peg$currPos) === 44) {\n                                            s10 = peg$c42;\n                                            peg$currPos++;\n                                        }\n                                        else {\n                                            s10 = peg$FAILED;\n                                            if (peg$silentFails === 0) {\n                                                peg$fail(peg$c43);\n                                            }\n                                        }\n                                        if (s10 !== peg$FAILED) {\n                                            s11 = peg$parse_();\n                                            if (s11 !== peg$FAILED) {\n                                                s12 = peg$parsedateOrTimeArgStyle();\n                                                if (s12 !== peg$FAILED) {\n                                                    s10 = [s10, s11, s12];\n                                                    s9 = s10;\n                                                }\n                                                else {\n                                                    peg$currPos = s9;\n                                                    s9 = peg$FAILED;\n                                                }\n                                            }\n                                            else {\n                                                peg$currPos = s9;\n                                                s9 = peg$FAILED;\n                                            }\n                                        }\n                                        else {\n                                            peg$currPos = s9;\n                                            s9 = peg$FAILED;\n                                        }\n                                        if (s9 === peg$FAILED) {\n                                            s9 = null;\n                                        }\n                                        if (s9 !== peg$FAILED) {\n                                            s10 = peg$parse_();\n                                            if (s10 !== peg$FAILED) {\n                                                if (input.charCodeAt(peg$currPos) === 125) {\n                                                    s11 = peg$c23;\n                                                    peg$currPos++;\n                                                }\n                                                else {\n                                                    s11 = peg$FAILED;\n                                                    if (peg$silentFails === 0) {\n                                                        peg$fail(peg$c24);\n                                                    }\n                                                }\n                                                if (s11 !== peg$FAILED) {\n                                                    peg$savedPos = s0;\n                                                    s1 = peg$c46(s3, s7, s9);\n                                                    s0 = s1;\n                                                }\n                                                else {\n                                                    peg$currPos = s0;\n                                                    s0 = peg$FAILED;\n                                                }\n                                            }\n                                            else {\n                                                peg$currPos = s0;\n                                                s0 = peg$FAILED;\n                                            }\n                                        }\n                                        else {\n                                            peg$currPos = s0;\n                                            s0 = peg$FAILED;\n                                        }\n                                    }\n                                    else {\n                                        peg$currPos = s0;\n                                        s0 = peg$FAILED;\n                                    }\n                                }\n                                else {\n                                    peg$currPos = s0;\n                                    s0 = peg$FAILED;\n                                }\n                            }\n                            else {\n                                peg$currPos = s0;\n                                s0 = peg$FAILED;\n                            }\n                        }\n                        else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                        }\n                    }\n                    else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        return s0;\n    }\n    function peg$parsesimpleFormatElement() {\n        var s0;\n        s0 = peg$parsenumberFormatElement();\n        if (s0 === peg$FAILED) {\n            s0 = peg$parsedateOrTimeFormatElement();\n        }\n        return s0;\n    }\n    function peg$parsepluralElement() {\n        var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 123) {\n            s1 = peg$c21;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c22);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parse_();\n            if (s2 !== peg$FAILED) {\n                s3 = peg$parseargNameOrNumber();\n                if (s3 !== peg$FAILED) {\n                    s4 = peg$parse_();\n                    if (s4 !== peg$FAILED) {\n                        if (input.charCodeAt(peg$currPos) === 44) {\n                            s5 = peg$c42;\n                            peg$currPos++;\n                        }\n                        else {\n                            s5 = peg$FAILED;\n                            if (peg$silentFails === 0) {\n                                peg$fail(peg$c43);\n                            }\n                        }\n                        if (s5 !== peg$FAILED) {\n                            s6 = peg$parse_();\n                            if (s6 !== peg$FAILED) {\n                                if (input.substr(peg$currPos, 6) === peg$c61) {\n                                    s7 = peg$c61;\n                                    peg$currPos += 6;\n                                }\n                                else {\n                                    s7 = peg$FAILED;\n                                    if (peg$silentFails === 0) {\n                                        peg$fail(peg$c62);\n                                    }\n                                }\n                                if (s7 === peg$FAILED) {\n                                    if (input.substr(peg$currPos, 13) === peg$c63) {\n                                        s7 = peg$c63;\n                                        peg$currPos += 13;\n                                    }\n                                    else {\n                                        s7 = peg$FAILED;\n                                        if (peg$silentFails === 0) {\n                                            peg$fail(peg$c64);\n                                        }\n                                    }\n                                }\n                                if (s7 !== peg$FAILED) {\n                                    s8 = peg$parse_();\n                                    if (s8 !== peg$FAILED) {\n                                        if (input.charCodeAt(peg$currPos) === 44) {\n                                            s9 = peg$c42;\n                                            peg$currPos++;\n                                        }\n                                        else {\n                                            s9 = peg$FAILED;\n                                            if (peg$silentFails === 0) {\n                                                peg$fail(peg$c43);\n                                            }\n                                        }\n                                        if (s9 !== peg$FAILED) {\n                                            s10 = peg$parse_();\n                                            if (s10 !== peg$FAILED) {\n                                                s11 = peg$currPos;\n                                                if (input.substr(peg$currPos, 7) === peg$c65) {\n                                                    s12 = peg$c65;\n                                                    peg$currPos += 7;\n                                                }\n                                                else {\n                                                    s12 = peg$FAILED;\n                                                    if (peg$silentFails === 0) {\n                                                        peg$fail(peg$c66);\n                                                    }\n                                                }\n                                                if (s12 !== peg$FAILED) {\n                                                    s13 = peg$parse_();\n                                                    if (s13 !== peg$FAILED) {\n                                                        s14 = peg$parsenumber();\n                                                        if (s14 !== peg$FAILED) {\n                                                            s12 = [s12, s13, s14];\n                                                            s11 = s12;\n                                                        }\n                                                        else {\n                                                            peg$currPos = s11;\n                                                            s11 = peg$FAILED;\n                                                        }\n                                                    }\n                                                    else {\n                                                        peg$currPos = s11;\n                                                        s11 = peg$FAILED;\n                                                    }\n                                                }\n                                                else {\n                                                    peg$currPos = s11;\n                                                    s11 = peg$FAILED;\n                                                }\n                                                if (s11 === peg$FAILED) {\n                                                    s11 = null;\n                                                }\n                                                if (s11 !== peg$FAILED) {\n                                                    s12 = peg$parse_();\n                                                    if (s12 !== peg$FAILED) {\n                                                        s13 = [];\n                                                        s14 = peg$parsepluralOption();\n                                                        if (s14 !== peg$FAILED) {\n                                                            while (s14 !== peg$FAILED) {\n                                                                s13.push(s14);\n                                                                s14 = peg$parsepluralOption();\n                                                            }\n                                                        }\n                                                        else {\n                                                            s13 = peg$FAILED;\n                                                        }\n                                                        if (s13 !== peg$FAILED) {\n                                                            s14 = peg$parse_();\n                                                            if (s14 !== peg$FAILED) {\n                                                                if (input.charCodeAt(peg$currPos) === 125) {\n                                                                    s15 = peg$c23;\n                                                                    peg$currPos++;\n                                                                }\n                                                                else {\n                                                                    s15 = peg$FAILED;\n                                                                    if (peg$silentFails === 0) {\n                                                                        peg$fail(peg$c24);\n                                                                    }\n                                                                }\n                                                                if (s15 !== peg$FAILED) {\n                                                                    peg$savedPos = s0;\n                                                                    s1 = peg$c67(s3, s7, s11, s13);\n                                                                    s0 = s1;\n                                                                }\n                                                                else {\n                                                                    peg$currPos = s0;\n                                                                    s0 = peg$FAILED;\n                                                                }\n                                                            }\n                                                            else {\n                                                                peg$currPos = s0;\n                                                                s0 = peg$FAILED;\n                                                            }\n                                                        }\n                                                        else {\n                                                            peg$currPos = s0;\n                                                            s0 = peg$FAILED;\n                                                        }\n                                                    }\n                                                    else {\n                                                        peg$currPos = s0;\n                                                        s0 = peg$FAILED;\n                                                    }\n                                                }\n                                                else {\n                                                    peg$currPos = s0;\n                                                    s0 = peg$FAILED;\n                                                }\n                                            }\n                                            else {\n                                                peg$currPos = s0;\n                                                s0 = peg$FAILED;\n                                            }\n                                        }\n                                        else {\n                                            peg$currPos = s0;\n                                            s0 = peg$FAILED;\n                                        }\n                                    }\n                                    else {\n                                        peg$currPos = s0;\n                                        s0 = peg$FAILED;\n                                    }\n                                }\n                                else {\n                                    peg$currPos = s0;\n                                    s0 = peg$FAILED;\n                                }\n                            }\n                            else {\n                                peg$currPos = s0;\n                                s0 = peg$FAILED;\n                            }\n                        }\n                        else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                        }\n                    }\n                    else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        return s0;\n    }\n    function peg$parseselectElement() {\n        var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 123) {\n            s1 = peg$c21;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c22);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parse_();\n            if (s2 !== peg$FAILED) {\n                s3 = peg$parseargNameOrNumber();\n                if (s3 !== peg$FAILED) {\n                    s4 = peg$parse_();\n                    if (s4 !== peg$FAILED) {\n                        if (input.charCodeAt(peg$currPos) === 44) {\n                            s5 = peg$c42;\n                            peg$currPos++;\n                        }\n                        else {\n                            s5 = peg$FAILED;\n                            if (peg$silentFails === 0) {\n                                peg$fail(peg$c43);\n                            }\n                        }\n                        if (s5 !== peg$FAILED) {\n                            s6 = peg$parse_();\n                            if (s6 !== peg$FAILED) {\n                                if (input.substr(peg$currPos, 6) === peg$c68) {\n                                    s7 = peg$c68;\n                                    peg$currPos += 6;\n                                }\n                                else {\n                                    s7 = peg$FAILED;\n                                    if (peg$silentFails === 0) {\n                                        peg$fail(peg$c69);\n                                    }\n                                }\n                                if (s7 !== peg$FAILED) {\n                                    s8 = peg$parse_();\n                                    if (s8 !== peg$FAILED) {\n                                        if (input.charCodeAt(peg$currPos) === 44) {\n                                            s9 = peg$c42;\n                                            peg$currPos++;\n                                        }\n                                        else {\n                                            s9 = peg$FAILED;\n                                            if (peg$silentFails === 0) {\n                                                peg$fail(peg$c43);\n                                            }\n                                        }\n                                        if (s9 !== peg$FAILED) {\n                                            s10 = peg$parse_();\n                                            if (s10 !== peg$FAILED) {\n                                                s11 = [];\n                                                s12 = peg$parseselectOption();\n                                                if (s12 !== peg$FAILED) {\n                                                    while (s12 !== peg$FAILED) {\n                                                        s11.push(s12);\n                                                        s12 = peg$parseselectOption();\n                                                    }\n                                                }\n                                                else {\n                                                    s11 = peg$FAILED;\n                                                }\n                                                if (s11 !== peg$FAILED) {\n                                                    s12 = peg$parse_();\n                                                    if (s12 !== peg$FAILED) {\n                                                        if (input.charCodeAt(peg$currPos) === 125) {\n                                                            s13 = peg$c23;\n                                                            peg$currPos++;\n                                                        }\n                                                        else {\n                                                            s13 = peg$FAILED;\n                                                            if (peg$silentFails === 0) {\n                                                                peg$fail(peg$c24);\n                                                            }\n                                                        }\n                                                        if (s13 !== peg$FAILED) {\n                                                            peg$savedPos = s0;\n                                                            s1 = peg$c70(s3, s11);\n                                                            s0 = s1;\n                                                        }\n                                                        else {\n                                                            peg$currPos = s0;\n                                                            s0 = peg$FAILED;\n                                                        }\n                                                    }\n                                                    else {\n                                                        peg$currPos = s0;\n                                                        s0 = peg$FAILED;\n                                                    }\n                                                }\n                                                else {\n                                                    peg$currPos = s0;\n                                                    s0 = peg$FAILED;\n                                                }\n                                            }\n                                            else {\n                                                peg$currPos = s0;\n                                                s0 = peg$FAILED;\n                                            }\n                                        }\n                                        else {\n                                            peg$currPos = s0;\n                                            s0 = peg$FAILED;\n                                        }\n                                    }\n                                    else {\n                                        peg$currPos = s0;\n                                        s0 = peg$FAILED;\n                                    }\n                                }\n                                else {\n                                    peg$currPos = s0;\n                                    s0 = peg$FAILED;\n                                }\n                            }\n                            else {\n                                peg$currPos = s0;\n                                s0 = peg$FAILED;\n                            }\n                        }\n                        else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                        }\n                    }\n                    else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        return s0;\n    }\n    function peg$parsepluralRuleSelectValue() {\n        var s0, s1, s2, s3;\n        s0 = peg$currPos;\n        s1 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 61) {\n            s2 = peg$c71;\n            peg$currPos++;\n        }\n        else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c72);\n            }\n        }\n        if (s2 !== peg$FAILED) {\n            s3 = peg$parsenumber();\n            if (s3 !== peg$FAILED) {\n                s2 = [s2, s3];\n                s1 = s2;\n            }\n            else {\n                peg$currPos = s1;\n                s1 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s1;\n            s1 = peg$FAILED;\n        }\n        if (s1 !== peg$FAILED) {\n            s0 = input.substring(s0, peg$currPos);\n        }\n        else {\n            s0 = s1;\n        }\n        if (s0 === peg$FAILED) {\n            s0 = peg$parseargName();\n        }\n        return s0;\n    }\n    function peg$parseselectOption() {\n        var s0, s1, s2, s3, s4, s5, s6, s7;\n        s0 = peg$currPos;\n        s1 = peg$parse_();\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parseargName();\n            if (s2 !== peg$FAILED) {\n                s3 = peg$parse_();\n                if (s3 !== peg$FAILED) {\n                    if (input.charCodeAt(peg$currPos) === 123) {\n                        s4 = peg$c21;\n                        peg$currPos++;\n                    }\n                    else {\n                        s4 = peg$FAILED;\n                        if (peg$silentFails === 0) {\n                            peg$fail(peg$c22);\n                        }\n                    }\n                    if (s4 !== peg$FAILED) {\n                        peg$savedPos = peg$currPos;\n                        s5 = peg$c73(s2);\n                        if (s5) {\n                            s5 = undefined;\n                        }\n                        else {\n                            s5 = peg$FAILED;\n                        }\n                        if (s5 !== peg$FAILED) {\n                            s6 = peg$parsemessage();\n                            if (s6 !== peg$FAILED) {\n                                if (input.charCodeAt(peg$currPos) === 125) {\n                                    s7 = peg$c23;\n                                    peg$currPos++;\n                                }\n                                else {\n                                    s7 = peg$FAILED;\n                                    if (peg$silentFails === 0) {\n                                        peg$fail(peg$c24);\n                                    }\n                                }\n                                if (s7 !== peg$FAILED) {\n                                    peg$savedPos = s0;\n                                    s1 = peg$c74(s2, s6);\n                                    s0 = s1;\n                                }\n                                else {\n                                    peg$currPos = s0;\n                                    s0 = peg$FAILED;\n                                }\n                            }\n                            else {\n                                peg$currPos = s0;\n                                s0 = peg$FAILED;\n                            }\n                        }\n                        else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                        }\n                    }\n                    else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        return s0;\n    }\n    function peg$parsepluralOption() {\n        var s0, s1, s2, s3, s4, s5, s6, s7;\n        s0 = peg$currPos;\n        s1 = peg$parse_();\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parsepluralRuleSelectValue();\n            if (s2 !== peg$FAILED) {\n                s3 = peg$parse_();\n                if (s3 !== peg$FAILED) {\n                    if (input.charCodeAt(peg$currPos) === 123) {\n                        s4 = peg$c21;\n                        peg$currPos++;\n                    }\n                    else {\n                        s4 = peg$FAILED;\n                        if (peg$silentFails === 0) {\n                            peg$fail(peg$c22);\n                        }\n                    }\n                    if (s4 !== peg$FAILED) {\n                        peg$savedPos = peg$currPos;\n                        s5 = peg$c75(s2);\n                        if (s5) {\n                            s5 = undefined;\n                        }\n                        else {\n                            s5 = peg$FAILED;\n                        }\n                        if (s5 !== peg$FAILED) {\n                            s6 = peg$parsemessage();\n                            if (s6 !== peg$FAILED) {\n                                if (input.charCodeAt(peg$currPos) === 125) {\n                                    s7 = peg$c23;\n                                    peg$currPos++;\n                                }\n                                else {\n                                    s7 = peg$FAILED;\n                                    if (peg$silentFails === 0) {\n                                        peg$fail(peg$c24);\n                                    }\n                                }\n                                if (s7 !== peg$FAILED) {\n                                    peg$savedPos = s0;\n                                    s1 = peg$c76(s2, s6);\n                                    s0 = s1;\n                                }\n                                else {\n                                    peg$currPos = s0;\n                                    s0 = peg$FAILED;\n                                }\n                            }\n                            else {\n                                peg$currPos = s0;\n                                s0 = peg$FAILED;\n                            }\n                        }\n                        else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                        }\n                    }\n                    else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        return s0;\n    }\n    function peg$parsewhiteSpace() {\n        var s0, s1;\n        peg$silentFails++;\n        if (peg$c78.test(input.charAt(peg$currPos))) {\n            s0 = input.charAt(peg$currPos);\n            peg$currPos++;\n        }\n        else {\n            s0 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c79);\n            }\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c77);\n            }\n        }\n        return s0;\n    }\n    function peg$parsepatternSyntax() {\n        var s0, s1;\n        peg$silentFails++;\n        if (peg$c81.test(input.charAt(peg$currPos))) {\n            s0 = input.charAt(peg$currPos);\n            peg$currPos++;\n        }\n        else {\n            s0 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c82);\n            }\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c80);\n            }\n        }\n        return s0;\n    }\n    function peg$parse_() {\n        var s0, s1, s2;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        s1 = [];\n        s2 = peg$parsewhiteSpace();\n        while (s2 !== peg$FAILED) {\n            s1.push(s2);\n            s2 = peg$parsewhiteSpace();\n        }\n        if (s1 !== peg$FAILED) {\n            s0 = input.substring(s0, peg$currPos);\n        }\n        else {\n            s0 = s1;\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c83);\n            }\n        }\n        return s0;\n    }\n    function peg$parsenumber() {\n        var s0, s1, s2;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 45) {\n            s1 = peg$c85;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c86);\n            }\n        }\n        if (s1 === peg$FAILED) {\n            s1 = null;\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parseargNumber();\n            if (s2 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c87(s1, s2);\n                s0 = s1;\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c84);\n            }\n        }\n        return s0;\n    }\n    function peg$parseapostrophe() {\n        var s0, s1;\n        peg$silentFails++;\n        if (input.charCodeAt(peg$currPos) === 39) {\n            s0 = peg$c47;\n            peg$currPos++;\n        }\n        else {\n            s0 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c48);\n            }\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c88);\n            }\n        }\n        return s0;\n    }\n    function peg$parsedoubleApostrophes() {\n        var s0, s1;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        if (input.substr(peg$currPos, 2) === peg$c90) {\n            s1 = peg$c90;\n            peg$currPos += 2;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c91);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c92();\n        }\n        s0 = s1;\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c89);\n            }\n        }\n        return s0;\n    }\n    function peg$parsequotedString() {\n        var s0, s1, s2, s3, s4, s5;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 39) {\n            s1 = peg$c47;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c48);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parseescapedChar();\n            if (s2 !== peg$FAILED) {\n                s3 = peg$currPos;\n                s4 = [];\n                if (input.substr(peg$currPos, 2) === peg$c90) {\n                    s5 = peg$c90;\n                    peg$currPos += 2;\n                }\n                else {\n                    s5 = peg$FAILED;\n                    if (peg$silentFails === 0) {\n                        peg$fail(peg$c91);\n                    }\n                }\n                if (s5 === peg$FAILED) {\n                    if (peg$c49.test(input.charAt(peg$currPos))) {\n                        s5 = input.charAt(peg$currPos);\n                        peg$currPos++;\n                    }\n                    else {\n                        s5 = peg$FAILED;\n                        if (peg$silentFails === 0) {\n                            peg$fail(peg$c50);\n                        }\n                    }\n                }\n                while (s5 !== peg$FAILED) {\n                    s4.push(s5);\n                    if (input.substr(peg$currPos, 2) === peg$c90) {\n                        s5 = peg$c90;\n                        peg$currPos += 2;\n                    }\n                    else {\n                        s5 = peg$FAILED;\n                        if (peg$silentFails === 0) {\n                            peg$fail(peg$c91);\n                        }\n                    }\n                    if (s5 === peg$FAILED) {\n                        if (peg$c49.test(input.charAt(peg$currPos))) {\n                            s5 = input.charAt(peg$currPos);\n                            peg$currPos++;\n                        }\n                        else {\n                            s5 = peg$FAILED;\n                            if (peg$silentFails === 0) {\n                                peg$fail(peg$c50);\n                            }\n                        }\n                    }\n                }\n                if (s4 !== peg$FAILED) {\n                    s3 = input.substring(s3, peg$currPos);\n                }\n                else {\n                    s3 = s4;\n                }\n                if (s3 !== peg$FAILED) {\n                    if (input.charCodeAt(peg$currPos) === 39) {\n                        s4 = peg$c47;\n                        peg$currPos++;\n                    }\n                    else {\n                        s4 = peg$FAILED;\n                        if (peg$silentFails === 0) {\n                            peg$fail(peg$c48);\n                        }\n                    }\n                    if (s4 === peg$FAILED) {\n                        s4 = null;\n                    }\n                    if (s4 !== peg$FAILED) {\n                        peg$savedPos = s0;\n                        s1 = peg$c93(s2, s3);\n                        s0 = s1;\n                    }\n                    else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        return s0;\n    }\n    function peg$parseunquotedString() {\n        var s0, s1, s2, s3;\n        s0 = peg$currPos;\n        s1 = peg$currPos;\n        if (input.length > peg$currPos) {\n            s2 = input.charAt(peg$currPos);\n            peg$currPos++;\n        }\n        else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c29);\n            }\n        }\n        if (s2 !== peg$FAILED) {\n            peg$savedPos = peg$currPos;\n            s3 = peg$c94(s2);\n            if (s3) {\n                s3 = undefined;\n            }\n            else {\n                s3 = peg$FAILED;\n            }\n            if (s3 !== peg$FAILED) {\n                s2 = [s2, s3];\n                s1 = s2;\n            }\n            else {\n                peg$currPos = s1;\n                s1 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s1;\n            s1 = peg$FAILED;\n        }\n        if (s1 === peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 10) {\n                s1 = peg$c95;\n                peg$currPos++;\n            }\n            else {\n                s1 = peg$FAILED;\n                if (peg$silentFails === 0) {\n                    peg$fail(peg$c96);\n                }\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s0 = input.substring(s0, peg$currPos);\n        }\n        else {\n            s0 = s1;\n        }\n        return s0;\n    }\n    function peg$parseescapedChar() {\n        var s0, s1, s2, s3;\n        s0 = peg$currPos;\n        s1 = peg$currPos;\n        if (input.length > peg$currPos) {\n            s2 = input.charAt(peg$currPos);\n            peg$currPos++;\n        }\n        else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c29);\n            }\n        }\n        if (s2 !== peg$FAILED) {\n            peg$savedPos = peg$currPos;\n            s3 = peg$c97(s2);\n            if (s3) {\n                s3 = undefined;\n            }\n            else {\n                s3 = peg$FAILED;\n            }\n            if (s3 !== peg$FAILED) {\n                s2 = [s2, s3];\n                s1 = s2;\n            }\n            else {\n                peg$currPos = s1;\n                s1 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s1;\n            s1 = peg$FAILED;\n        }\n        if (s1 !== peg$FAILED) {\n            s0 = input.substring(s0, peg$currPos);\n        }\n        else {\n            s0 = s1;\n        }\n        return s0;\n    }\n    function peg$parseargNameOrNumber() {\n        var s0, s1;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        s1 = peg$parseargNumber();\n        if (s1 === peg$FAILED) {\n            s1 = peg$parseargName();\n        }\n        if (s1 !== peg$FAILED) {\n            s0 = input.substring(s0, peg$currPos);\n        }\n        else {\n            s0 = s1;\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c98);\n            }\n        }\n        return s0;\n    }\n    function peg$parsevalidTag() {\n        var s0, s1;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        s1 = peg$parseargNumber();\n        if (s1 === peg$FAILED) {\n            s1 = peg$parsetagName();\n        }\n        if (s1 !== peg$FAILED) {\n            s0 = input.substring(s0, peg$currPos);\n        }\n        else {\n            s0 = s1;\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c99);\n            }\n        }\n        return s0;\n    }\n    function peg$parseargNumber() {\n        var s0, s1, s2, s3, s4;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 48) {\n            s1 = peg$c101;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c102);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c103();\n        }\n        s0 = s1;\n        if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            s1 = peg$currPos;\n            if (peg$c104.test(input.charAt(peg$currPos))) {\n                s2 = input.charAt(peg$currPos);\n                peg$currPos++;\n            }\n            else {\n                s2 = peg$FAILED;\n                if (peg$silentFails === 0) {\n                    peg$fail(peg$c105);\n                }\n            }\n            if (s2 !== peg$FAILED) {\n                s3 = [];\n                if (peg$c106.test(input.charAt(peg$currPos))) {\n                    s4 = input.charAt(peg$currPos);\n                    peg$currPos++;\n                }\n                else {\n                    s4 = peg$FAILED;\n                    if (peg$silentFails === 0) {\n                        peg$fail(peg$c107);\n                    }\n                }\n                while (s4 !== peg$FAILED) {\n                    s3.push(s4);\n                    if (peg$c106.test(input.charAt(peg$currPos))) {\n                        s4 = input.charAt(peg$currPos);\n                        peg$currPos++;\n                    }\n                    else {\n                        s4 = peg$FAILED;\n                        if (peg$silentFails === 0) {\n                            peg$fail(peg$c107);\n                        }\n                    }\n                }\n                if (s3 !== peg$FAILED) {\n                    s2 = [s2, s3];\n                    s1 = s2;\n                }\n                else {\n                    peg$currPos = s1;\n                    s1 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s1;\n                s1 = peg$FAILED;\n            }\n            if (s1 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c108(s1);\n            }\n            s0 = s1;\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c100);\n            }\n        }\n        return s0;\n    }\n    function peg$parseargName() {\n        var s0, s1, s2, s3, s4;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        s1 = [];\n        s2 = peg$currPos;\n        s3 = peg$currPos;\n        peg$silentFails++;\n        s4 = peg$parsewhiteSpace();\n        if (s4 === peg$FAILED) {\n            s4 = peg$parsepatternSyntax();\n        }\n        peg$silentFails--;\n        if (s4 === peg$FAILED) {\n            s3 = undefined;\n        }\n        else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n            if (input.length > peg$currPos) {\n                s4 = input.charAt(peg$currPos);\n                peg$currPos++;\n            }\n            else {\n                s4 = peg$FAILED;\n                if (peg$silentFails === 0) {\n                    peg$fail(peg$c29);\n                }\n            }\n            if (s4 !== peg$FAILED) {\n                s3 = [s3, s4];\n                s2 = s3;\n            }\n            else {\n                peg$currPos = s2;\n                s2 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s2;\n            s2 = peg$FAILED;\n        }\n        if (s2 !== peg$FAILED) {\n            while (s2 !== peg$FAILED) {\n                s1.push(s2);\n                s2 = peg$currPos;\n                s3 = peg$currPos;\n                peg$silentFails++;\n                s4 = peg$parsewhiteSpace();\n                if (s4 === peg$FAILED) {\n                    s4 = peg$parsepatternSyntax();\n                }\n                peg$silentFails--;\n                if (s4 === peg$FAILED) {\n                    s3 = undefined;\n                }\n                else {\n                    peg$currPos = s3;\n                    s3 = peg$FAILED;\n                }\n                if (s3 !== peg$FAILED) {\n                    if (input.length > peg$currPos) {\n                        s4 = input.charAt(peg$currPos);\n                        peg$currPos++;\n                    }\n                    else {\n                        s4 = peg$FAILED;\n                        if (peg$silentFails === 0) {\n                            peg$fail(peg$c29);\n                        }\n                    }\n                    if (s4 !== peg$FAILED) {\n                        s3 = [s3, s4];\n                        s2 = s3;\n                    }\n                    else {\n                        peg$currPos = s2;\n                        s2 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s2;\n                    s2 = peg$FAILED;\n                }\n            }\n        }\n        else {\n            s1 = peg$FAILED;\n        }\n        if (s1 !== peg$FAILED) {\n            s0 = input.substring(s0, peg$currPos);\n        }\n        else {\n            s0 = s1;\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c109);\n            }\n        }\n        return s0;\n    }\n    function peg$parsetagName() {\n        var s0, s1, s2, s3, s4;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        s1 = [];\n        if (input.charCodeAt(peg$currPos) === 45) {\n            s2 = peg$c85;\n            peg$currPos++;\n        }\n        else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c86);\n            }\n        }\n        if (s2 === peg$FAILED) {\n            s2 = peg$currPos;\n            s3 = peg$currPos;\n            peg$silentFails++;\n            s4 = peg$parsewhiteSpace();\n            if (s4 === peg$FAILED) {\n                s4 = peg$parsepatternSyntax();\n            }\n            peg$silentFails--;\n            if (s4 === peg$FAILED) {\n                s3 = undefined;\n            }\n            else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n            }\n            if (s3 !== peg$FAILED) {\n                if (input.length > peg$currPos) {\n                    s4 = input.charAt(peg$currPos);\n                    peg$currPos++;\n                }\n                else {\n                    s4 = peg$FAILED;\n                    if (peg$silentFails === 0) {\n                        peg$fail(peg$c29);\n                    }\n                }\n                if (s4 !== peg$FAILED) {\n                    s3 = [s3, s4];\n                    s2 = s3;\n                }\n                else {\n                    peg$currPos = s2;\n                    s2 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s2;\n                s2 = peg$FAILED;\n            }\n        }\n        if (s2 !== peg$FAILED) {\n            while (s2 !== peg$FAILED) {\n                s1.push(s2);\n                if (input.charCodeAt(peg$currPos) === 45) {\n                    s2 = peg$c85;\n                    peg$currPos++;\n                }\n                else {\n                    s2 = peg$FAILED;\n                    if (peg$silentFails === 0) {\n                        peg$fail(peg$c86);\n                    }\n                }\n                if (s2 === peg$FAILED) {\n                    s2 = peg$currPos;\n                    s3 = peg$currPos;\n                    peg$silentFails++;\n                    s4 = peg$parsewhiteSpace();\n                    if (s4 === peg$FAILED) {\n                        s4 = peg$parsepatternSyntax();\n                    }\n                    peg$silentFails--;\n                    if (s4 === peg$FAILED) {\n                        s3 = undefined;\n                    }\n                    else {\n                        peg$currPos = s3;\n                        s3 = peg$FAILED;\n                    }\n                    if (s3 !== peg$FAILED) {\n                        if (input.length > peg$currPos) {\n                            s4 = input.charAt(peg$currPos);\n                            peg$currPos++;\n                        }\n                        else {\n                            s4 = peg$FAILED;\n                            if (peg$silentFails === 0) {\n                                peg$fail(peg$c29);\n                            }\n                        }\n                        if (s4 !== peg$FAILED) {\n                            s3 = [s3, s4];\n                            s2 = s3;\n                        }\n                        else {\n                            peg$currPos = s2;\n                            s2 = peg$FAILED;\n                        }\n                    }\n                    else {\n                        peg$currPos = s2;\n                        s2 = peg$FAILED;\n                    }\n                }\n            }\n        }\n        else {\n            s1 = peg$FAILED;\n        }\n        if (s1 !== peg$FAILED) {\n            s0 = input.substring(s0, peg$currPos);\n        }\n        else {\n            s0 = s1;\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c110);\n            }\n        }\n        return s0;\n    }\n    var messageCtx = ['root'];\n    function isNestedMessageText() {\n        return messageCtx.length > 1;\n    }\n    function isInPluralOption() {\n        return messageCtx[messageCtx.length - 1] === 'plural';\n    }\n    function insertLocation() {\n        return options && options.captureLocation ? {\n            location: location()\n        } : {};\n    }\n    peg$result = peg$startRuleFunction();\n    if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n        return peg$result;\n    }\n    else {\n        if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n            peg$fail(peg$endExpectation());\n        }\n        throw peg$buildStructuredError(peg$maxFailExpected, peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null, peg$maxFailPos < input.length\n            ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)\n            : peg$computeLocation(peg$maxFailPos, peg$maxFailPos));\n    }\n}\nexport var pegParse = peg$parse;\n//# sourceMappingURL=parser.js.map","var __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nimport { isPluralElement, isLiteralElement, isSelectElement, } from './types';\nimport { pegParse } from './parser';\nvar PLURAL_HASHTAG_REGEX = /(^|[^\\\\])#/g;\n/**\n * Whether to convert `#` in plural rule options\n * to `{var, number}`\n * @param el AST Element\n * @param pluralStack current plural stack\n */\nexport function normalizeHashtagInPlural(els) {\n    els.forEach(function (el) {\n        // If we're encountering a plural el\n        if (!isPluralElement(el) && !isSelectElement(el)) {\n            return;\n        }\n        // Go down the options and search for # in any literal element\n        Object.keys(el.options).forEach(function (id) {\n            var _a;\n            var opt = el.options[id];\n            // If we got a match, we have to split this\n            // and inject a NumberElement in the middle\n            var matchingLiteralElIndex = -1;\n            var literalEl = undefined;\n            for (var i = 0; i < opt.value.length; i++) {\n                var el_1 = opt.value[i];\n                if (isLiteralElement(el_1) && PLURAL_HASHTAG_REGEX.test(el_1.value)) {\n                    matchingLiteralElIndex = i;\n                    literalEl = el_1;\n                    break;\n                }\n            }\n            if (literalEl) {\n                var newValue = literalEl.value.replace(PLURAL_HASHTAG_REGEX, \"$1{\" + el.value + \", number}\");\n                var newEls = pegParse(newValue);\n                (_a = opt.value).splice.apply(_a, __spreadArrays([matchingLiteralElIndex, 1], newEls));\n            }\n            normalizeHashtagInPlural(opt.value);\n        });\n    });\n}\n//# sourceMappingURL=normalize.js.map","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\n/**\n * https://unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * Credit: https://github.com/caridy/intl-datetimeformat-pattern/blob/master/index.js\n * with some tweaks\n */\nvar DATE_TIME_REGEX = /(?:[Eec]{1,6}|G{1,5}|[Qq]{1,5}|(?:[yYur]+|U{1,5})|[ML]{1,5}|d{1,2}|D{1,3}|F{1}|[abB]{1,5}|[hkHK]{1,2}|w{1,2}|W{1}|m{1,2}|s{1,2}|[zZOvVxX]{1,4})(?=([^']*'[^']*')*[^']*$)/g;\n/**\n * Parse Date time skeleton into Intl.DateTimeFormatOptions\n * Ref: https://unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * @public\n * @param skeleton skeleton string\n */\nexport function parseDateTimeSkeleton(skeleton) {\n    var result = {};\n    skeleton.replace(DATE_TIME_REGEX, function (match) {\n        var len = match.length;\n        switch (match[0]) {\n            // Era\n            case 'G':\n                result.era = len === 4 ? 'long' : len === 5 ? 'narrow' : 'short';\n                break;\n            // Year\n            case 'y':\n                result.year = len === 2 ? '2-digit' : 'numeric';\n                break;\n            case 'Y':\n            case 'u':\n            case 'U':\n            case 'r':\n                throw new RangeError('`Y/u/U/r` (year) patterns are not supported, use `y` instead');\n            // Quarter\n            case 'q':\n            case 'Q':\n                throw new RangeError('`q/Q` (quarter) patterns are not supported');\n            // Month\n            case 'M':\n            case 'L':\n                result.month = ['numeric', '2-digit', 'short', 'long', 'narrow'][len - 1];\n                break;\n            // Week\n            case 'w':\n            case 'W':\n                throw new RangeError('`w/W` (week) patterns are not supported');\n            case 'd':\n                result.day = ['numeric', '2-digit'][len - 1];\n                break;\n            case 'D':\n            case 'F':\n            case 'g':\n                throw new RangeError('`D/F/g` (day) patterns are not supported, use `d` instead');\n            // Weekday\n            case 'E':\n                result.weekday = len === 4 ? 'short' : len === 5 ? 'narrow' : 'short';\n                break;\n            case 'e':\n                if (len < 4) {\n                    throw new RangeError('`e..eee` (weekday) patterns are not supported');\n                }\n                result.weekday = ['short', 'long', 'narrow', 'short'][len - 4];\n                break;\n            case 'c':\n                if (len < 4) {\n                    throw new RangeError('`c..ccc` (weekday) patterns are not supported');\n                }\n                result.weekday = ['short', 'long', 'narrow', 'short'][len - 4];\n                break;\n            // Period\n            case 'a': // AM, PM\n                result.hour12 = true;\n                break;\n            case 'b': // am, pm, noon, midnight\n            case 'B': // flexible day periods\n                throw new RangeError('`b/B` (period) patterns are not supported, use `a` instead');\n            // Hour\n            case 'h':\n                result.hourCycle = 'h12';\n                result.hour = ['numeric', '2-digit'][len - 1];\n                break;\n            case 'H':\n                result.hourCycle = 'h23';\n                result.hour = ['numeric', '2-digit'][len - 1];\n                break;\n            case 'K':\n                result.hourCycle = 'h11';\n                result.hour = ['numeric', '2-digit'][len - 1];\n                break;\n            case 'k':\n                result.hourCycle = 'h24';\n                result.hour = ['numeric', '2-digit'][len - 1];\n                break;\n            case 'j':\n            case 'J':\n            case 'C':\n                throw new RangeError('`j/J/C` (hour) patterns are not supported, use `h/H/K/k` instead');\n            // Minute\n            case 'm':\n                result.minute = ['numeric', '2-digit'][len - 1];\n                break;\n            // Second\n            case 's':\n                result.second = ['numeric', '2-digit'][len - 1];\n                break;\n            case 'S':\n            case 'A':\n                throw new RangeError('`S/A` (second) pattenrs are not supported, use `s` instead');\n            // Zone\n            case 'z': // 1..3, 4: specific non-location format\n                result.timeZoneName = len < 4 ? 'short' : 'long';\n                break;\n            case 'Z': // 1..3, 4, 5: The ISO8601 varios formats\n            case 'O': // 1, 4: miliseconds in day short, long\n            case 'v': // 1, 4: generic non-location format\n            case 'V': // 1, 2, 3, 4: time zone ID or city\n            case 'X': // 1, 2, 3, 4: The ISO8601 varios formats\n            case 'x': // 1, 2, 3, 4: The ISO8601 varios formats\n                throw new RangeError('`Z/O/v/V/X/x` (timeZone) pattenrs are not supported, use `z` instead');\n        }\n        return '';\n    });\n    return result;\n}\nfunction icuUnitToEcma(unit) {\n    return unit.replace(/^(.*?)-/, '');\n}\nvar FRACTION_PRECISION_REGEX = /^\\.(?:(0+)(\\*)?|(#+)|(0+)(#+))$/g;\nvar SIGNIFICANT_PRECISION_REGEX = /^(@+)?(\\+|#+)?$/g;\nfunction parseSignificantPrecision(str) {\n    var result = {};\n    str.replace(SIGNIFICANT_PRECISION_REGEX, function (_, g1, g2) {\n        // @@@ case\n        if (typeof g2 !== 'string') {\n            result.minimumSignificantDigits = g1.length;\n            result.maximumSignificantDigits = g1.length;\n        }\n        // @@@+ case\n        else if (g2 === '+') {\n            result.minimumSignificantDigits = g1.length;\n        }\n        // .### case\n        else if (g1[0] === '#') {\n            result.maximumSignificantDigits = g1.length;\n        }\n        // .@@## or .@@@ case\n        else {\n            result.minimumSignificantDigits = g1.length;\n            result.maximumSignificantDigits =\n                g1.length + (typeof g2 === 'string' ? g2.length : 0);\n        }\n        return '';\n    });\n    return result;\n}\nfunction parseSign(str) {\n    switch (str) {\n        case 'sign-auto':\n            return {\n                signDisplay: 'auto',\n            };\n        case 'sign-accounting':\n            return {\n                currencySign: 'accounting',\n            };\n        case 'sign-always':\n            return {\n                signDisplay: 'always',\n            };\n        case 'sign-accounting-always':\n            return {\n                signDisplay: 'always',\n                currencySign: 'accounting',\n            };\n        case 'sign-except-zero':\n            return {\n                signDisplay: 'exceptZero',\n            };\n        case 'sign-accounting-except-zero':\n            return {\n                signDisplay: 'exceptZero',\n                currencySign: 'accounting',\n            };\n        case 'sign-never':\n            return {\n                signDisplay: 'never',\n            };\n    }\n}\nfunction parseNotationOptions(opt) {\n    var result = {};\n    var signOpts = parseSign(opt);\n    if (signOpts) {\n        return signOpts;\n    }\n    return result;\n}\n/**\n * https://github.com/unicode-org/icu/blob/master/docs/userguide/format_parse/numbers/skeletons.md#skeleton-stems-and-options\n */\nexport function convertNumberSkeletonToNumberFormatOptions(tokens) {\n    var result = {};\n    for (var _i = 0, tokens_1 = tokens; _i < tokens_1.length; _i++) {\n        var token = tokens_1[_i];\n        switch (token.stem) {\n            case 'percent':\n                result.style = 'percent';\n                continue;\n            case 'currency':\n                result.style = 'currency';\n                result.currency = token.options[0];\n                continue;\n            case 'group-off':\n                result.useGrouping = false;\n                continue;\n            case 'precision-integer':\n            case '.':\n                result.maximumFractionDigits = 0;\n                continue;\n            case 'measure-unit':\n                result.style = 'unit';\n                result.unit = icuUnitToEcma(token.options[0]);\n                continue;\n            case 'compact-short':\n                result.notation = 'compact';\n                result.compactDisplay = 'short';\n                continue;\n            case 'compact-long':\n                result.notation = 'compact';\n                result.compactDisplay = 'long';\n                continue;\n            case 'scientific':\n                result = __assign(__assign(__assign({}, result), { notation: 'scientific' }), token.options.reduce(function (all, opt) { return (__assign(__assign({}, all), parseNotationOptions(opt))); }, {}));\n                continue;\n            case 'engineering':\n                result = __assign(__assign(__assign({}, result), { notation: 'engineering' }), token.options.reduce(function (all, opt) { return (__assign(__assign({}, all), parseNotationOptions(opt))); }, {}));\n                continue;\n            case 'notation-simple':\n                result.notation = 'standard';\n                continue;\n            // https://github.com/unicode-org/icu/blob/master/icu4c/source/i18n/unicode/unumberformatter.h\n            case 'unit-width-narrow':\n                result.currencyDisplay = 'narrowSymbol';\n                result.unitDisplay = 'narrow';\n                continue;\n            case 'unit-width-short':\n                result.currencyDisplay = 'code';\n                result.unitDisplay = 'short';\n                continue;\n            case 'unit-width-full-name':\n                result.currencyDisplay = 'name';\n                result.unitDisplay = 'long';\n                continue;\n            case 'unit-width-iso-code':\n                result.currencyDisplay = 'symbol';\n                continue;\n        }\n        // Precision\n        // https://github.com/unicode-org/icu/blob/master/docs/userguide/format_parse/numbers/skeletons.md#fraction-precision\n        // precision-integer case\n        if (FRACTION_PRECISION_REGEX.test(token.stem)) {\n            if (token.options.length > 1) {\n                throw new RangeError('Fraction-precision stems only accept a single optional option');\n            }\n            token.stem.replace(FRACTION_PRECISION_REGEX, function (match, g1, g2, g3, g4, g5) {\n                // .000* case (before ICU67 it was .000+)\n                if (g2 === '*') {\n                    result.minimumFractionDigits = g1.length;\n                }\n                // .### case\n                else if (g3 && g3[0] === '#') {\n                    result.maximumFractionDigits = g3.length;\n                }\n                // .00## case\n                else if (g4 && g5) {\n                    result.minimumFractionDigits = g4.length;\n                    result.maximumFractionDigits = g4.length + g5.length;\n                }\n                else {\n                    result.minimumFractionDigits = g1.length;\n                    result.maximumFractionDigits = g1.length;\n                }\n                return '';\n            });\n            if (token.options.length) {\n                result = __assign(__assign({}, result), parseSignificantPrecision(token.options[0]));\n            }\n            continue;\n        }\n        if (SIGNIFICANT_PRECISION_REGEX.test(token.stem)) {\n            result = __assign(__assign({}, result), parseSignificantPrecision(token.stem));\n            continue;\n        }\n        var signOpts = parseSign(token.stem);\n        if (signOpts) {\n            result = __assign(__assign({}, result), signOpts);\n        }\n    }\n    return result;\n}\n//# sourceMappingURL=skeleton.js.map","import { pegParse } from './parser';\nimport { normalizeHashtagInPlural } from './normalize';\nexport * from './types';\nexport * from './parser';\nexport * from './skeleton';\nexport function parse(input, opts) {\n    var els = pegParse(input, opts);\n    if (!opts || opts.normalizeHashtagInPlural !== false) {\n        normalizeHashtagInPlural(els);\n    }\n    return els;\n}\n//# sourceMappingURL=index.js.map","/*\nCopyright (c) 2014, Yahoo! Inc. All rights reserved.\nCopyrights licensed under the New BSD License.\nSee the accompanying LICENSE file for terms.\n*/\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\n// -- Utilities ----------------------------------------------------------------\nfunction getCacheId(inputs) {\n    return JSON.stringify(inputs.map(function (input) {\n        return input && typeof input === 'object' ? orderedProps(input) : input;\n    }));\n}\nfunction orderedProps(obj) {\n    return Object.keys(obj)\n        .sort()\n        .map(function (k) {\n        var _a;\n        return (_a = {}, _a[k] = obj[k], _a);\n    });\n}\nvar memoizeFormatConstructor = function (FormatConstructor, cache) {\n    if (cache === void 0) { cache = {}; }\n    return function () {\n        var _a;\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var cacheId = getCacheId(args);\n        var format = cacheId && cache[cacheId];\n        if (!format) {\n            format = new ((_a = FormatConstructor).bind.apply(_a, __spreadArrays([void 0], args)))();\n            if (cacheId) {\n                cache[cacheId] = format;\n            }\n        }\n        return format;\n    };\n};\nexport default memoizeFormatConstructor;\n//# sourceMappingURL=index.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nexport var ErrorCode;\n(function (ErrorCode) {\n    // When we have a placeholder but no value to format\n    ErrorCode[\"MISSING_VALUE\"] = \"MISSING_VALUE\";\n    // When value supplied is invalid\n    ErrorCode[\"INVALID_VALUE\"] = \"INVALID_VALUE\";\n    // When we need specific Intl API but it's not available\n    ErrorCode[\"MISSING_INTL_API\"] = \"MISSING_INTL_API\";\n})(ErrorCode || (ErrorCode = {}));\nvar FormatError = /** @class */ (function (_super) {\n    __extends(FormatError, _super);\n    function FormatError(msg, code, originalMessage) {\n        var _this = _super.call(this, msg) || this;\n        _this.code = code;\n        _this.originalMessage = originalMessage;\n        return _this;\n    }\n    FormatError.prototype.toString = function () {\n        return \"[formatjs Error: \" + this.code + \"] \" + this.message;\n    };\n    return FormatError;\n}(Error));\nexport { FormatError };\nvar InvalidValueError = /** @class */ (function (_super) {\n    __extends(InvalidValueError, _super);\n    function InvalidValueError(variableId, value, options, originalMessage) {\n        return _super.call(this, \"Invalid values for \\\"\" + variableId + \"\\\": \\\"\" + value + \"\\\". Options are \\\"\" + Object.keys(options).join('\", \"') + \"\\\"\", \"INVALID_VALUE\" /* INVALID_VALUE */, originalMessage) || this;\n    }\n    return InvalidValueError;\n}(FormatError));\nexport { InvalidValueError };\nvar InvalidValueTypeError = /** @class */ (function (_super) {\n    __extends(InvalidValueTypeError, _super);\n    function InvalidValueTypeError(value, type, originalMessage) {\n        return _super.call(this, \"Value for \\\"\" + value + \"\\\" must be of type \" + type, \"INVALID_VALUE\" /* INVALID_VALUE */, originalMessage) || this;\n    }\n    return InvalidValueTypeError;\n}(FormatError));\nexport { InvalidValueTypeError };\nvar MissingValueError = /** @class */ (function (_super) {\n    __extends(MissingValueError, _super);\n    function MissingValueError(variableId, originalMessage) {\n        return _super.call(this, \"The intl string context variable \\\"\" + variableId + \"\\\" was not provided to the string \\\"\" + originalMessage + \"\\\"\", \"MISSING_VALUE\" /* MISSING_VALUE */, originalMessage) || this;\n    }\n    return MissingValueError;\n}(FormatError));\nexport { MissingValueError };\n//# sourceMappingURL=error.js.map","import { convertNumberSkeletonToNumberFormatOptions, isArgumentElement, isDateElement, isDateTimeSkeleton, isLiteralElement, isNumberElement, isNumberSkeleton, isPluralElement, isPoundElement, isSelectElement, isTimeElement, parseDateTimeSkeleton, isTagElement, } from 'intl-messageformat-parser';\nimport { MissingValueError, InvalidValueError, FormatError, InvalidValueTypeError, } from './error';\nexport var PART_TYPE;\n(function (PART_TYPE) {\n    PART_TYPE[PART_TYPE[\"literal\"] = 0] = \"literal\";\n    PART_TYPE[PART_TYPE[\"object\"] = 1] = \"object\";\n})(PART_TYPE || (PART_TYPE = {}));\nfunction mergeLiteral(parts) {\n    if (parts.length < 2) {\n        return parts;\n    }\n    return parts.reduce(function (all, part) {\n        var lastPart = all[all.length - 1];\n        if (!lastPart ||\n            lastPart.type !== 0 /* literal */ ||\n            part.type !== 0 /* literal */) {\n            all.push(part);\n        }\n        else {\n            lastPart.value += part.value;\n        }\n        return all;\n    }, []);\n}\nfunction isFormatXMLElementFn(el) {\n    return typeof el === 'function';\n}\n// TODO(skeleton): add skeleton support\nexport function formatToParts(els, locales, formatters, formats, values, currentPluralValue, \n// For debugging\noriginalMessage) {\n    // Hot path for straight simple msg translations\n    if (els.length === 1 && isLiteralElement(els[0])) {\n        return [\n            {\n                type: 0 /* literal */,\n                value: els[0].value,\n            },\n        ];\n    }\n    var result = [];\n    for (var _i = 0, els_1 = els; _i < els_1.length; _i++) {\n        var el = els_1[_i];\n        // Exit early for string parts.\n        if (isLiteralElement(el)) {\n            result.push({\n                type: 0 /* literal */,\n                value: el.value,\n            });\n            continue;\n        }\n        // TODO: should this part be literal type?\n        // Replace `#` in plural rules with the actual numeric value.\n        if (isPoundElement(el)) {\n            if (typeof currentPluralValue === 'number') {\n                result.push({\n                    type: 0 /* literal */,\n                    value: formatters.getNumberFormat(locales).format(currentPluralValue),\n                });\n            }\n            continue;\n        }\n        var varName = el.value;\n        // Enforce that all required values are provided by the caller.\n        if (!(values && varName in values)) {\n            throw new MissingValueError(varName, originalMessage);\n        }\n        var value = values[varName];\n        if (isArgumentElement(el)) {\n            if (!value || typeof value === 'string' || typeof value === 'number') {\n                value =\n                    typeof value === 'string' || typeof value === 'number'\n                        ? String(value)\n                        : '';\n            }\n            result.push({\n                type: typeof value === 'string' ? 0 /* literal */ : 1 /* object */,\n                value: value,\n            });\n            continue;\n        }\n        // Recursively format plural and select parts' option — which can be a\n        // nested pattern structure. The choosing of the option to use is\n        // abstracted-by and delegated-to the part helper object.\n        if (isDateElement(el)) {\n            var style = typeof el.style === 'string' ? formats.date[el.style] : undefined;\n            result.push({\n                type: 0 /* literal */,\n                value: formatters\n                    .getDateTimeFormat(locales, style)\n                    .format(value),\n            });\n            continue;\n        }\n        if (isTimeElement(el)) {\n            var style = typeof el.style === 'string'\n                ? formats.time[el.style]\n                : isDateTimeSkeleton(el.style)\n                    ? parseDateTimeSkeleton(el.style.pattern)\n                    : undefined;\n            result.push({\n                type: 0 /* literal */,\n                value: formatters\n                    .getDateTimeFormat(locales, style)\n                    .format(value),\n            });\n            continue;\n        }\n        if (isNumberElement(el)) {\n            var style = typeof el.style === 'string'\n                ? formats.number[el.style]\n                : isNumberSkeleton(el.style)\n                    ? convertNumberSkeletonToNumberFormatOptions(el.style.tokens)\n                    : undefined;\n            result.push({\n                type: 0 /* literal */,\n                value: formatters\n                    .getNumberFormat(locales, style)\n                    .format(value),\n            });\n            continue;\n        }\n        if (isTagElement(el)) {\n            var children = el.children, value_1 = el.value;\n            var formatFn = values[value_1];\n            if (!isFormatXMLElementFn(formatFn)) {\n                throw new InvalidValueTypeError(value_1, 'function', originalMessage);\n            }\n            var parts = formatToParts(children, locales, formatters, formats, values);\n            var chunks = formatFn.apply(void 0, parts.map(function (p) { return p.value; }));\n            if (!Array.isArray(chunks)) {\n                chunks = [chunks];\n            }\n            result.push.apply(result, chunks.map(function (c) {\n                return {\n                    type: typeof c === 'string' ? 0 /* literal */ : 1 /* object */,\n                    value: c,\n                };\n            }));\n        }\n        if (isSelectElement(el)) {\n            var opt = el.options[value] || el.options.other;\n            if (!opt) {\n                throw new InvalidValueError(el.value, value, Object.keys(el.options), originalMessage);\n            }\n            result.push.apply(result, formatToParts(opt.value, locales, formatters, formats, values));\n            continue;\n        }\n        if (isPluralElement(el)) {\n            var opt = el.options[\"=\" + value];\n            if (!opt) {\n                if (!Intl.PluralRules) {\n                    throw new FormatError(\"Intl.PluralRules is not available in this environment.\\nTry polyfilling it using \\\"@formatjs/intl-pluralrules\\\"\\n\", \"MISSING_INTL_API\" /* MISSING_INTL_API */, originalMessage);\n                }\n                var rule = formatters\n                    .getPluralRules(locales, { type: el.pluralType })\n                    .select(value - (el.offset || 0));\n                opt = el.options[rule] || el.options.other;\n            }\n            if (!opt) {\n                throw new InvalidValueError(el.value, value, Object.keys(el.options), originalMessage);\n            }\n            result.push.apply(result, formatToParts(opt.value, locales, formatters, formats, values, value - (el.offset || 0)));\n            continue;\n        }\n    }\n    return mergeLiteral(result);\n}\n//# sourceMappingURL=formatters.js.map","/*\nCopyright (c) 2014, Yahoo! Inc. All rights reserved.\nCopyrights licensed under the New BSD License.\nSee the accompanying LICENSE file for terms.\n*/\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { parse } from 'intl-messageformat-parser';\nimport memoizeIntlConstructor from 'intl-format-cache';\nimport { formatToParts, } from './formatters';\n// -- MessageFormat --------------------------------------------------------\nfunction mergeConfig(c1, c2) {\n    if (!c2) {\n        return c1;\n    }\n    return __assign(__assign(__assign({}, (c1 || {})), (c2 || {})), Object.keys(c1).reduce(function (all, k) {\n        all[k] = __assign(__assign({}, c1[k]), (c2[k] || {}));\n        return all;\n    }, {}));\n}\nfunction mergeConfigs(defaultConfig, configs) {\n    if (!configs) {\n        return defaultConfig;\n    }\n    return Object.keys(defaultConfig).reduce(function (all, k) {\n        all[k] = mergeConfig(defaultConfig[k], configs[k]);\n        return all;\n    }, __assign({}, defaultConfig));\n}\nexport function createDefaultFormatters(cache) {\n    if (cache === void 0) { cache = {\n        number: {},\n        dateTime: {},\n        pluralRules: {},\n    }; }\n    return {\n        getNumberFormat: memoizeIntlConstructor(Intl.NumberFormat, cache.number),\n        getDateTimeFormat: memoizeIntlConstructor(Intl.DateTimeFormat, cache.dateTime),\n        getPluralRules: memoizeIntlConstructor(Intl.PluralRules, cache.pluralRules),\n    };\n}\nvar IntlMessageFormat = /** @class */ (function () {\n    function IntlMessageFormat(message, locales, overrideFormats, opts) {\n        var _this = this;\n        if (locales === void 0) { locales = IntlMessageFormat.defaultLocale; }\n        this.formatterCache = {\n            number: {},\n            dateTime: {},\n            pluralRules: {},\n        };\n        this.format = function (values) {\n            var parts = _this.formatToParts(values);\n            // Hot path for straight simple msg translations\n            if (parts.length === 1) {\n                return parts[0].value;\n            }\n            var result = parts.reduce(function (all, part) {\n                if (!all.length ||\n                    part.type !== 0 /* literal */ ||\n                    typeof all[all.length - 1] !== 'string') {\n                    all.push(part.value);\n                }\n                else {\n                    all[all.length - 1] += part.value;\n                }\n                return all;\n            }, []);\n            if (result.length <= 1) {\n                return result[0] || '';\n            }\n            return result;\n        };\n        this.formatToParts = function (values) {\n            return formatToParts(_this.ast, _this.locales, _this.formatters, _this.formats, values, undefined, _this.message);\n        };\n        this.resolvedOptions = function () { return ({\n            locale: Intl.NumberFormat.supportedLocalesOf(_this.locales)[0],\n        }); };\n        this.getAst = function () { return _this.ast; };\n        if (typeof message === 'string') {\n            this.message = message;\n            if (!IntlMessageFormat.__parse) {\n                throw new TypeError('IntlMessageFormat.__parse must be set to process `message` of type `string`');\n            }\n            // Parse string messages into an AST.\n            this.ast = IntlMessageFormat.__parse(message, {\n                normalizeHashtagInPlural: false,\n            });\n        }\n        else {\n            this.ast = message;\n        }\n        if (!Array.isArray(this.ast)) {\n            throw new TypeError('A message must be provided as a String or AST.');\n        }\n        // Creates a new object with the specified `formats` merged with the default\n        // formats.\n        this.formats = mergeConfigs(IntlMessageFormat.formats, overrideFormats);\n        // Defined first because it's used to build the format pattern.\n        this.locales = locales;\n        this.formatters =\n            (opts && opts.formatters) || createDefaultFormatters(this.formatterCache);\n    }\n    Object.defineProperty(IntlMessageFormat, \"defaultLocale\", {\n        get: function () {\n            if (!IntlMessageFormat.memoizedDefaultLocale) {\n                IntlMessageFormat.memoizedDefaultLocale = new Intl.NumberFormat().resolvedOptions().locale;\n            }\n            return IntlMessageFormat.memoizedDefaultLocale;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    IntlMessageFormat.memoizedDefaultLocale = null;\n    IntlMessageFormat.__parse = parse;\n    // Default format options used as the prototype of the `formats` provided to the\n    // constructor. These are used when constructing the internal Intl.NumberFormat\n    // and Intl.DateTimeFormat instances.\n    IntlMessageFormat.formats = {\n        number: {\n            currency: {\n                style: 'currency',\n            },\n            percent: {\n                style: 'percent',\n            },\n        },\n        date: {\n            short: {\n                month: 'numeric',\n                day: 'numeric',\n                year: '2-digit',\n            },\n            medium: {\n                month: 'short',\n                day: 'numeric',\n                year: 'numeric',\n            },\n            long: {\n                month: 'long',\n                day: 'numeric',\n                year: 'numeric',\n            },\n            full: {\n                weekday: 'long',\n                month: 'long',\n                day: 'numeric',\n                year: 'numeric',\n            },\n        },\n        time: {\n            short: {\n                hour: 'numeric',\n                minute: 'numeric',\n            },\n            medium: {\n                hour: 'numeric',\n                minute: 'numeric',\n                second: 'numeric',\n            },\n            long: {\n                hour: 'numeric',\n                minute: 'numeric',\n                second: 'numeric',\n                timeZoneName: 'short',\n            },\n            full: {\n                hour: 'numeric',\n                minute: 'numeric',\n                second: 'numeric',\n                timeZoneName: 'short',\n            },\n        },\n    };\n    return IntlMessageFormat;\n}());\nexport { IntlMessageFormat };\nexport default IntlMessageFormat;\n//# sourceMappingURL=core.js.map","/*\nCopyright (c) 2014, Yahoo! Inc. All rights reserved.\nCopyrights licensed under the New BSD License.\nSee the accompanying LICENSE file for terms.\n*/\nimport IntlMessageFormat from './core';\nexport * from './formatters';\nexport * from './core';\nexport * from './error';\nexport default IntlMessageFormat;\n//# sourceMappingURL=index.js.map","export function invariant(condition, message, Err) {\n    if (Err === void 0) { Err = Error; }\n    if (!condition) {\n        throw new Err(message);\n    }\n}\n//# sourceMappingURL=invariant.js.map","export var ReactIntlErrorCode;\n(function (ReactIntlErrorCode) {\n    ReactIntlErrorCode[\"FORMAT_ERROR\"] = \"FORMAT_ERROR\";\n    ReactIntlErrorCode[\"UNSUPPORTED_FORMATTER\"] = \"UNSUPPORTED_FORMATTER\";\n    ReactIntlErrorCode[\"INVALID_CONFIG\"] = \"INVALID_CONFIG\";\n    ReactIntlErrorCode[\"MISSING_DATA\"] = \"MISSING_DATA\";\n    ReactIntlErrorCode[\"MISSING_TRANSLATION\"] = \"MISSING_TRANSLATION\";\n})(ReactIntlErrorCode || (ReactIntlErrorCode = {}));\nexport class ReactIntlError extends Error {\n    constructor(code, message, descriptor, exception) {\n        super(`[React Intl Error ${code}] ${message} ${exception ? `\\n${exception.stack}` : ''}`);\n        this.code = code;\n        this.descriptor = descriptor;\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(this, ReactIntlError);\n        }\n    }\n}\n","/*\nHTML escaping is the same as React's\n(on purpose.) Therefore, it has the following Copyright and Licensing:\n\nCopyright 2013-2014, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the LICENSE\nfile in the root directory of React's source tree.\n*/\nimport * as React from 'react';\nimport IntlMessageFormat from 'intl-messageformat';\nimport memoizeIntlConstructor from 'intl-format-cache';\nimport { invariant } from '@formatjs/intl-utils';\nimport { ReactIntlError } from './error';\nexport function filterProps(props, whitelist, defaults = {}) {\n    return whitelist.reduce((filtered, name) => {\n        if (name in props) {\n            filtered[name] = props[name];\n        }\n        else if (name in defaults) {\n            filtered[name] = defaults[name];\n        }\n        return filtered;\n    }, {});\n}\nexport function invariantIntlContext(intl) {\n    invariant(intl, '[React Intl] Could not find required `intl` object. ' +\n        '<IntlProvider> needs to exist in the component ancestry.');\n}\nexport function defaultErrorHandler(error) {\n    if (process.env.NODE_ENV !== 'production') {\n        console.error(error);\n    }\n}\nexport const DEFAULT_INTL_CONFIG = {\n    formats: {},\n    messages: {},\n    timeZone: undefined,\n    textComponent: React.Fragment,\n    defaultLocale: 'en',\n    defaultFormats: {},\n    onError: defaultErrorHandler,\n};\nexport function createIntlCache() {\n    return {\n        dateTime: {},\n        number: {},\n        message: {},\n        relativeTime: {},\n        pluralRules: {},\n        list: {},\n        displayNames: {},\n    };\n}\n/**\n * Create intl formatters and populate cache\n * @param cache explicit cache to prevent leaking memory\n */\nexport function createFormatters(cache = createIntlCache()) {\n    const RelativeTimeFormat = Intl.RelativeTimeFormat;\n    const ListFormat = Intl.ListFormat;\n    const DisplayNames = Intl.DisplayNames;\n    return {\n        getDateTimeFormat: memoizeIntlConstructor(Intl.DateTimeFormat, cache.dateTime),\n        getNumberFormat: memoizeIntlConstructor(Intl.NumberFormat, cache.number),\n        getMessageFormat: memoizeIntlConstructor(IntlMessageFormat, cache.message),\n        getRelativeTimeFormat: memoizeIntlConstructor(RelativeTimeFormat, cache.relativeTime),\n        getPluralRules: memoizeIntlConstructor(Intl.PluralRules, cache.pluralRules),\n        getListFormat: memoizeIntlConstructor(ListFormat, cache.list),\n        getDisplayNames: memoizeIntlConstructor(DisplayNames, cache.displayNames),\n    };\n}\nexport function getNamedFormat(formats, type, name, onError) {\n    const formatType = formats && formats[type];\n    let format;\n    if (formatType) {\n        format = formatType[name];\n    }\n    if (format) {\n        return format;\n    }\n    onError(new ReactIntlError(\"UNSUPPORTED_FORMATTER\" /* UNSUPPORTED_FORMATTER */, `No ${type} format named: ${name}`));\n}\n","/** @license React v16.8.6\n * react-is.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n\n\nif (process.env.NODE_ENV !== \"production\") {\n  (function() {\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n// The Symbol used to tag the ReactElement-like types. If there is no native Symbol\n// nor polyfill, then a plain number is used for performance.\nvar hasSymbol = typeof Symbol === 'function' && Symbol.for;\n\nvar REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;\nvar REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;\nvar REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;\nvar REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;\nvar REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;\nvar REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;\nvar REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace;\nvar REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for('react.async_mode') : 0xeacf;\nvar REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;\nvar REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;\nvar REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;\nvar REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;\nvar REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;\n\nfunction isValidElementType(type) {\n  return typeof type === 'string' || typeof type === 'function' ||\n  // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.\n  type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE);\n}\n\n/**\n * Forked from fbjs/warning:\n * https://github.com/facebook/fbjs/blob/e66ba20ad5be433eb54423f2b097d829324d9de6/packages/fbjs/src/__forks__/warning.js\n *\n * Only change is we use console.warn instead of console.error,\n * and do nothing when 'console' is not supported.\n * This really simplifies the code.\n * ---\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar lowPriorityWarning = function () {};\n\n{\n  var printWarning = function (format) {\n    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    var argIndex = 0;\n    var message = 'Warning: ' + format.replace(/%s/g, function () {\n      return args[argIndex++];\n    });\n    if (typeof console !== 'undefined') {\n      console.warn(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  };\n\n  lowPriorityWarning = function (condition, format) {\n    if (format === undefined) {\n      throw new Error('`lowPriorityWarning(condition, format, ...args)` requires a warning ' + 'message argument');\n    }\n    if (!condition) {\n      for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n        args[_key2 - 2] = arguments[_key2];\n      }\n\n      printWarning.apply(undefined, [format].concat(args));\n    }\n  };\n}\n\nvar lowPriorityWarning$1 = lowPriorityWarning;\n\nfunction typeOf(object) {\n  if (typeof object === 'object' && object !== null) {\n    var $$typeof = object.$$typeof;\n    switch ($$typeof) {\n      case REACT_ELEMENT_TYPE:\n        var type = object.type;\n\n        switch (type) {\n          case REACT_ASYNC_MODE_TYPE:\n          case REACT_CONCURRENT_MODE_TYPE:\n          case REACT_FRAGMENT_TYPE:\n          case REACT_PROFILER_TYPE:\n          case REACT_STRICT_MODE_TYPE:\n          case REACT_SUSPENSE_TYPE:\n            return type;\n          default:\n            var $$typeofType = type && type.$$typeof;\n\n            switch ($$typeofType) {\n              case REACT_CONTEXT_TYPE:\n              case REACT_FORWARD_REF_TYPE:\n              case REACT_PROVIDER_TYPE:\n                return $$typeofType;\n              default:\n                return $$typeof;\n            }\n        }\n      case REACT_LAZY_TYPE:\n      case REACT_MEMO_TYPE:\n      case REACT_PORTAL_TYPE:\n        return $$typeof;\n    }\n  }\n\n  return undefined;\n}\n\n// AsyncMode is deprecated along with isAsyncMode\nvar AsyncMode = REACT_ASYNC_MODE_TYPE;\nvar ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;\nvar ContextConsumer = REACT_CONTEXT_TYPE;\nvar ContextProvider = REACT_PROVIDER_TYPE;\nvar Element = REACT_ELEMENT_TYPE;\nvar ForwardRef = REACT_FORWARD_REF_TYPE;\nvar Fragment = REACT_FRAGMENT_TYPE;\nvar Lazy = REACT_LAZY_TYPE;\nvar Memo = REACT_MEMO_TYPE;\nvar Portal = REACT_PORTAL_TYPE;\nvar Profiler = REACT_PROFILER_TYPE;\nvar StrictMode = REACT_STRICT_MODE_TYPE;\nvar Suspense = REACT_SUSPENSE_TYPE;\n\nvar hasWarnedAboutDeprecatedIsAsyncMode = false;\n\n// AsyncMode should be deprecated\nfunction isAsyncMode(object) {\n  {\n    if (!hasWarnedAboutDeprecatedIsAsyncMode) {\n      hasWarnedAboutDeprecatedIsAsyncMode = true;\n      lowPriorityWarning$1(false, 'The ReactIs.isAsyncMode() alias has been deprecated, ' + 'and will be removed in React 17+. Update your code to use ' + 'ReactIs.isConcurrentMode() instead. It has the exact same API.');\n    }\n  }\n  return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;\n}\nfunction isConcurrentMode(object) {\n  return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;\n}\nfunction isContextConsumer(object) {\n  return typeOf(object) === REACT_CONTEXT_TYPE;\n}\nfunction isContextProvider(object) {\n  return typeOf(object) === REACT_PROVIDER_TYPE;\n}\nfunction isElement(object) {\n  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n}\nfunction isForwardRef(object) {\n  return typeOf(object) === REACT_FORWARD_REF_TYPE;\n}\nfunction isFragment(object) {\n  return typeOf(object) === REACT_FRAGMENT_TYPE;\n}\nfunction isLazy(object) {\n  return typeOf(object) === REACT_LAZY_TYPE;\n}\nfunction isMemo(object) {\n  return typeOf(object) === REACT_MEMO_TYPE;\n}\nfunction isPortal(object) {\n  return typeOf(object) === REACT_PORTAL_TYPE;\n}\nfunction isProfiler(object) {\n  return typeOf(object) === REACT_PROFILER_TYPE;\n}\nfunction isStrictMode(object) {\n  return typeOf(object) === REACT_STRICT_MODE_TYPE;\n}\nfunction isSuspense(object) {\n  return typeOf(object) === REACT_SUSPENSE_TYPE;\n}\n\nexports.typeOf = typeOf;\nexports.AsyncMode = AsyncMode;\nexports.ConcurrentMode = ConcurrentMode;\nexports.ContextConsumer = ContextConsumer;\nexports.ContextProvider = ContextProvider;\nexports.Element = Element;\nexports.ForwardRef = ForwardRef;\nexports.Fragment = Fragment;\nexports.Lazy = Lazy;\nexports.Memo = Memo;\nexports.Portal = Portal;\nexports.Profiler = Profiler;\nexports.StrictMode = StrictMode;\nexports.Suspense = Suspense;\nexports.isValidElementType = isValidElementType;\nexports.isAsyncMode = isAsyncMode;\nexports.isConcurrentMode = isConcurrentMode;\nexports.isContextConsumer = isContextConsumer;\nexports.isContextProvider = isContextProvider;\nexports.isElement = isElement;\nexports.isForwardRef = isForwardRef;\nexports.isFragment = isFragment;\nexports.isLazy = isLazy;\nexports.isMemo = isMemo;\nexports.isPortal = isPortal;\nexports.isProfiler = isProfiler;\nexports.isStrictMode = isStrictMode;\nexports.isSuspense = isSuspense;\n  })();\n}\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n","'use strict';\n\nvar reactIs = require('react-is');\n\n/**\n * Copyright 2015, Yahoo! Inc.\n * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.\n */\nvar REACT_STATICS = {\n  childContextTypes: true,\n  contextType: true,\n  contextTypes: true,\n  defaultProps: true,\n  displayName: true,\n  getDefaultProps: true,\n  getDerivedStateFromError: true,\n  getDerivedStateFromProps: true,\n  mixins: true,\n  propTypes: true,\n  type: true\n};\nvar KNOWN_STATICS = {\n  name: true,\n  length: true,\n  prototype: true,\n  caller: true,\n  callee: true,\n  arguments: true,\n  arity: true\n};\nvar FORWARD_REF_STATICS = {\n  '$$typeof': true,\n  render: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true\n};\nvar MEMO_STATICS = {\n  '$$typeof': true,\n  compare: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true,\n  type: true\n};\nvar TYPE_STATICS = {};\nTYPE_STATICS[reactIs.ForwardRef] = FORWARD_REF_STATICS;\nTYPE_STATICS[reactIs.Memo] = MEMO_STATICS;\n\nfunction getStatics(component) {\n  // React v16.11 and below\n  if (reactIs.isMemo(component)) {\n    return MEMO_STATICS;\n  } // React v16.12 and above\n\n\n  return TYPE_STATICS[component['$$typeof']] || REACT_STATICS;\n}\n\nvar defineProperty = Object.defineProperty;\nvar getOwnPropertyNames = Object.getOwnPropertyNames;\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nvar getPrototypeOf = Object.getPrototypeOf;\nvar objectPrototype = Object.prototype;\nfunction hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {\n  if (typeof sourceComponent !== 'string') {\n    // don't hoist over string (html) components\n    if (objectPrototype) {\n      var inheritedComponent = getPrototypeOf(sourceComponent);\n\n      if (inheritedComponent && inheritedComponent !== objectPrototype) {\n        hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);\n      }\n    }\n\n    var keys = getOwnPropertyNames(sourceComponent);\n\n    if (getOwnPropertySymbols) {\n      keys = keys.concat(getOwnPropertySymbols(sourceComponent));\n    }\n\n    var targetStatics = getStatics(targetComponent);\n    var sourceStatics = getStatics(sourceComponent);\n\n    for (var i = 0; i < keys.length; ++i) {\n      var key = keys[i];\n\n      if (!KNOWN_STATICS[key] && !(blacklist && blacklist[key]) && !(sourceStatics && sourceStatics[key]) && !(targetStatics && targetStatics[key])) {\n        var descriptor = getOwnPropertyDescriptor(sourceComponent, key);\n\n        try {\n          // Avoid failures from read-only properties\n          defineProperty(targetComponent, key, descriptor);\n        } catch (e) {}\n      }\n    }\n  }\n\n  return targetComponent;\n}\n\nmodule.exports = hoistNonReactStatics;\n","import * as React from 'react';\nimport * as hoistNonReactStatics_ from 'hoist-non-react-statics';\n// Since rollup cannot deal with namespace being a function,\n// this is to interop with TypeScript since `invariant`\n// does not export a default\n// https://github.com/rollup/rollup/issues/1267\nconst hoistNonReactStatics = hoistNonReactStatics_.default || hoistNonReactStatics_;\nimport { invariantIntlContext } from '../utils';\nfunction getDisplayName(Component) {\n    return Component.displayName || Component.name || 'Component';\n}\n// TODO: We should provide initial value here\nconst IntlContext = React.createContext(null);\nconst { Consumer: IntlConsumer, Provider: IntlProvider } = IntlContext;\nexport const Provider = IntlProvider;\nexport const Context = IntlContext;\nexport default function injectIntl(WrappedComponent, options) {\n    const { intlPropName = 'intl', forwardRef = false, enforceContext = true } = options || {};\n    const WithIntl = props => (React.createElement(IntlConsumer, null, (intl) => {\n        if (enforceContext) {\n            invariantIntlContext(intl);\n        }\n        const intlProp = { [intlPropName]: intl };\n        return (React.createElement(WrappedComponent, Object.assign({}, props, intlProp, { ref: forwardRef ? props.forwardedRef : null })));\n    }));\n    WithIntl.displayName = `injectIntl(${getDisplayName(WrappedComponent)})`;\n    WithIntl.WrappedComponent = WrappedComponent;\n    if (forwardRef) {\n        return hoistNonReactStatics(React.forwardRef((props, ref) => (React.createElement(WithIntl, Object.assign({}, props, { forwardedRef: ref })))), WrappedComponent);\n    }\n    return hoistNonReactStatics(WithIntl, WrappedComponent);\n}\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport { invariantIntlContext } from '../utils';\nimport { Context } from './injectIntl';\nvar DisplayName;\n(function (DisplayName) {\n    DisplayName[\"formatDate\"] = \"FormattedDate\";\n    DisplayName[\"formatTime\"] = \"FormattedTime\";\n    DisplayName[\"formatNumber\"] = \"FormattedNumber\";\n    DisplayName[\"formatList\"] = \"FormattedList\";\n    // Note that this DisplayName is the locale display name, not to be confused with\n    // the name of the enum, which is for React component display name in dev tools.\n    DisplayName[\"formatDisplayName\"] = \"FormattedDisplayName\";\n})(DisplayName || (DisplayName = {}));\nvar DisplayNameParts;\n(function (DisplayNameParts) {\n    DisplayNameParts[\"formatDate\"] = \"FormattedDateParts\";\n    DisplayNameParts[\"formatTime\"] = \"FormattedTimeParts\";\n    DisplayNameParts[\"formatNumber\"] = \"FormattedNumberParts\";\n    DisplayNameParts[\"formatList\"] = \"FormattedListParts\";\n})(DisplayNameParts || (DisplayNameParts = {}));\nexport const FormattedNumberParts = props => (React.createElement(Context.Consumer, null, (intl) => {\n    invariantIntlContext(intl);\n    const { value, children } = props, formatProps = __rest(props, [\"value\", \"children\"]);\n    return children(intl.formatNumberToParts(value, formatProps));\n}));\nFormattedNumberParts.displayName = 'FormattedNumberParts';\nexport function createFormattedDateTimePartsComponent(name) {\n    const ComponentParts = props => (React.createElement(Context.Consumer, null, (intl) => {\n        invariantIntlContext(intl);\n        const { value, children } = props, formatProps = __rest(props, [\"value\", \"children\"]);\n        const date = typeof value === 'string' ? new Date(value || 0) : value;\n        const formattedParts = name === 'formatDate'\n            ? intl.formatDateToParts(date, formatProps)\n            : intl.formatTimeToParts(date, formatProps);\n        return children(formattedParts);\n    }));\n    ComponentParts.displayName = DisplayNameParts[name];\n    return ComponentParts;\n}\nexport function createFormattedComponent(name) {\n    const Component = props => (React.createElement(Context.Consumer, null, (intl) => {\n        invariantIntlContext(intl);\n        const { value, children } = props, formatProps = __rest(props\n        // TODO: fix TS type definition for localeMatcher upstream\n        , [\"value\", \"children\"]);\n        // TODO: fix TS type definition for localeMatcher upstream\n        const formattedValue = intl[name](value, formatProps);\n        if (typeof children === 'function') {\n            return children(formattedValue);\n        }\n        const Text = intl.textComponent || React.Fragment;\n        return React.createElement(Text, null, formattedValue);\n    }));\n    Component.displayName = DisplayName[name];\n    return Component;\n}\n","import { useContext } from 'react';\nimport { Context } from './injectIntl';\nimport { invariantIntlContext } from '../utils';\nexport default function useIntl() {\n    const intl = useContext(Context);\n    invariantIntlContext(intl);\n    return intl;\n}\n","import { getNamedFormat, filterProps } from '../utils';\nimport { ReactIntlError } from '../error';\nconst NUMBER_FORMAT_OPTIONS = [\n    'localeMatcher',\n    'style',\n    'currency',\n    'currencyDisplay',\n    'unit',\n    'unitDisplay',\n    'useGrouping',\n    'minimumIntegerDigits',\n    'minimumFractionDigits',\n    'maximumFractionDigits',\n    'minimumSignificantDigits',\n    'maximumSignificantDigits',\n    // Unified NumberFormat (Stage 3 as of 10/22/19)\n    'compactDisplay',\n    'currencyDisplay',\n    'currencySign',\n    'notation',\n    'signDisplay',\n    'unit',\n    'unitDisplay',\n];\nexport function getFormatter({ locale, formats, onError, }, getNumberFormat, options = {}) {\n    const { format } = options;\n    const defaults = ((format &&\n        getNamedFormat(formats, 'number', format, onError)) ||\n        {});\n    const filteredOptions = filterProps(options, NUMBER_FORMAT_OPTIONS, defaults);\n    return getNumberFormat(locale, filteredOptions);\n}\nexport function formatNumber(config, getNumberFormat, value, options = {}) {\n    try {\n        return getFormatter(config, getNumberFormat, options).format(value);\n    }\n    catch (e) {\n        config.onError(new ReactIntlError(\"FORMAT_ERROR\" /* FORMAT_ERROR */, 'Error formatting number.', e));\n    }\n    return String(value);\n}\nexport function formatNumberToParts(config, getNumberFormat, value, options = {}) {\n    try {\n        return getFormatter(config, getNumberFormat, options).formatToParts(value);\n    }\n    catch (e) {\n        config.onError(new ReactIntlError(\"FORMAT_ERROR\" /* FORMAT_ERROR */, 'Error formatting number.', e));\n    }\n    return [];\n}\n","import { getNamedFormat, filterProps } from '../utils';\nimport { FormatError } from 'intl-messageformat';\nimport { ReactIntlError } from '../error';\nconst RELATIVE_TIME_FORMAT_OPTIONS = ['numeric', 'style'];\nfunction getFormatter({ locale, formats, onError, }, getRelativeTimeFormat, options = {}) {\n    const { format } = options;\n    const defaults = (!!format && getNamedFormat(formats, 'relative', format, onError)) || {};\n    const filteredOptions = filterProps(options, RELATIVE_TIME_FORMAT_OPTIONS, defaults);\n    return getRelativeTimeFormat(locale, filteredOptions);\n}\nexport function formatRelativeTime(config, getRelativeTimeFormat, value, unit, options = {}) {\n    if (!unit) {\n        unit = 'second';\n    }\n    const RelativeTimeFormat = Intl.RelativeTimeFormat;\n    if (!RelativeTimeFormat) {\n        config.onError(new FormatError(`Intl.RelativeTimeFormat is not available in this environment.\nTry polyfilling it using \"@formatjs/intl-relativetimeformat\"\n`, \"MISSING_INTL_API\" /* MISSING_INTL_API */));\n    }\n    try {\n        return getFormatter(config, getRelativeTimeFormat, options).format(value, unit);\n    }\n    catch (e) {\n        config.onError(new ReactIntlError(\"FORMAT_ERROR\" /* FORMAT_ERROR */, 'Error formatting relative time.', e));\n    }\n    return String(value);\n}\n","/*\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the New BSD License.\n * See the accompanying LICENSE file for terms.\n */\nimport { filterProps, getNamedFormat } from '../utils';\nimport { ReactIntlError } from '../error';\nconst DATE_TIME_FORMAT_OPTIONS = [\n    'localeMatcher',\n    'formatMatcher',\n    'timeZone',\n    'hour12',\n    'weekday',\n    'era',\n    'year',\n    'month',\n    'day',\n    'hour',\n    'minute',\n    'second',\n    'timeZoneName',\n];\nexport function getFormatter({ locale, formats, onError, timeZone, }, type, getDateTimeFormat, options = {}) {\n    const { format } = options;\n    const defaults = Object.assign(Object.assign({}, (timeZone && { timeZone })), (format && getNamedFormat(formats, type, format, onError)));\n    let filteredOptions = filterProps(options, DATE_TIME_FORMAT_OPTIONS, defaults);\n    if (type === 'time' &&\n        !filteredOptions.hour &&\n        !filteredOptions.minute &&\n        !filteredOptions.second) {\n        // Add default formatting options if hour, minute, or second isn't defined.\n        filteredOptions = Object.assign(Object.assign({}, filteredOptions), { hour: 'numeric', minute: 'numeric' });\n    }\n    return getDateTimeFormat(locale, filteredOptions);\n}\nexport function formatDate(config, getDateTimeFormat, value, options = {}) {\n    const date = typeof value === 'string' ? new Date(value || 0) : value;\n    try {\n        return getFormatter(config, 'date', getDateTimeFormat, options).format(date);\n    }\n    catch (e) {\n        config.onError(new ReactIntlError(\"FORMAT_ERROR\" /* FORMAT_ERROR */, 'Error formatting date.', e));\n    }\n    return String(date);\n}\nexport function formatTime(config, getDateTimeFormat, value, options = {}) {\n    const date = typeof value === 'string' ? new Date(value || 0) : value;\n    try {\n        return getFormatter(config, 'time', getDateTimeFormat, options).format(date);\n    }\n    catch (e) {\n        config.onError(new ReactIntlError(\"FORMAT_ERROR\" /* FORMAT_ERROR */, 'Error formatting time.', e));\n    }\n    return String(date);\n}\nexport function formatDateToParts(config, getDateTimeFormat, value, options = {}) {\n    const date = typeof value === 'string' ? new Date(value || 0) : value;\n    try {\n        return getFormatter(config, 'date', getDateTimeFormat, options).formatToParts(date);\n    }\n    catch (e) {\n        config.onError(new ReactIntlError(\"FORMAT_ERROR\" /* FORMAT_ERROR */, 'Error formatting date.', e));\n    }\n    return [];\n}\nexport function formatTimeToParts(config, getDateTimeFormat, value, options = {}) {\n    const date = typeof value === 'string' ? new Date(value || 0) : value;\n    try {\n        return getFormatter(config, 'time', getDateTimeFormat, options).formatToParts(date);\n    }\n    catch (e) {\n        config.onError(new ReactIntlError(\"FORMAT_ERROR\" /* FORMAT_ERROR */, 'Error formatting time.', e));\n    }\n    return [];\n}\n","import { filterProps } from '../utils';\nimport { ReactIntlError } from '../error';\nimport { FormatError } from 'intl-messageformat';\nconst PLURAL_FORMAT_OPTIONS = [\n    'localeMatcher',\n    'type',\n];\nexport function formatPlural({ locale, onError }, getPluralRules, value, options = {}) {\n    if (!Intl.PluralRules) {\n        onError(new FormatError(`Intl.PluralRules is not available in this environment.\nTry polyfilling it using \"@formatjs/intl-pluralrules\"\n`, \"MISSING_INTL_API\" /* MISSING_INTL_API */));\n    }\n    const filteredOptions = filterProps(options, PLURAL_FORMAT_OPTIONS);\n    try {\n        return getPluralRules(locale, filteredOptions).select(value);\n    }\n    catch (e) {\n        onError(new ReactIntlError(\"FORMAT_ERROR\" /* FORMAT_ERROR */, 'Error formatting plural.', e));\n    }\n    return 'other';\n}\n","/*\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the New BSD License.\n * See the accompanying LICENSE file for terms.\n */\nimport * as React from 'react';\nimport { invariant } from '@formatjs/intl-utils';\nimport IntlMessageFormat from 'intl-messageformat';\nimport { ReactIntlError } from '../error';\nfunction setTimeZoneInOptions(opts, timeZone) {\n    return Object.keys(opts).reduce((all, k) => {\n        all[k] = Object.assign({ timeZone }, opts[k]);\n        return all;\n    }, {});\n}\nfunction deepMergeOptions(opts1, opts2) {\n    const keys = Object.keys(Object.assign(Object.assign({}, opts1), opts2));\n    return keys.reduce((all, k) => {\n        all[k] = Object.assign(Object.assign({}, (opts1[k] || {})), (opts2[k] || {}));\n        return all;\n    }, {});\n}\nfunction deepMergeFormatsAndSetTimeZone(f1, timeZone) {\n    if (!timeZone) {\n        return f1;\n    }\n    const mfFormats = IntlMessageFormat.formats;\n    return Object.assign(Object.assign(Object.assign({}, mfFormats), f1), { date: deepMergeOptions(setTimeZoneInOptions(mfFormats.date, timeZone), setTimeZoneInOptions(f1.date || {}, timeZone)), time: deepMergeOptions(setTimeZoneInOptions(mfFormats.time, timeZone), setTimeZoneInOptions(f1.time || {}, timeZone)) });\n}\nfunction prepareIntlMessageFormatHtmlOutput(chunks) {\n    return React.createElement(React.Fragment, null, ...chunks);\n}\nexport function formatMessage({ locale, formats, messages, defaultLocale, defaultFormats, onError, timeZone, wrapRichTextChunksInFragment, }, state, messageDescriptor = { id: '' }, values = {}) {\n    const { id, defaultMessage } = messageDescriptor;\n    // `id` is a required field of a Message Descriptor.\n    invariant(!!id, '[React Intl] An `id` must be provided to format a message.');\n    const message = messages && messages[String(id)];\n    formats = deepMergeFormatsAndSetTimeZone(formats, timeZone);\n    defaultFormats = deepMergeFormatsAndSetTimeZone(defaultFormats, timeZone);\n    let formattedMessageParts = '';\n    if (message) {\n        try {\n            const formatter = state.getMessageFormat(message, locale, formats, {\n                formatters: state,\n            });\n            formattedMessageParts = formatter.format(values);\n        }\n        catch (e) {\n            onError(new ReactIntlError(\"FORMAT_ERROR\" /* FORMAT_ERROR */, `Error formatting message: \"${id}\" for locale: \"${locale}\"` +\n                (defaultMessage ? ', using default message as fallback.' : ''), messageDescriptor, e));\n        }\n    }\n    else if (!defaultMessage ||\n        (locale && locale.toLowerCase() !== defaultLocale.toLowerCase())) {\n        // This prevents warnings from littering the console in development\n        // when no `messages` are passed into the <IntlProvider> for the\n        // default locale.\n        onError(new ReactIntlError(\"MISSING_TRANSLATION\" /* MISSING_TRANSLATION */, `Missing message: \"${id}\" for locale: \"${locale}\"` +\n            (defaultMessage ? ', using default message as fallback.' : ''), messageDescriptor));\n    }\n    if (!formattedMessageParts && defaultMessage) {\n        try {\n            const formatter = state.getMessageFormat(defaultMessage, defaultLocale, defaultFormats);\n            formattedMessageParts = formatter.format(values);\n        }\n        catch (e) {\n            onError(new ReactIntlError(\"FORMAT_ERROR\" /* FORMAT_ERROR */, `Error formatting the default message for: \"${id}\"`, messageDescriptor, e));\n        }\n    }\n    if (!formattedMessageParts) {\n        onError(new ReactIntlError(\"FORMAT_ERROR\" /* FORMAT_ERROR */, `Cannot format message: \"${id}\", ` +\n            `using message ${message || defaultMessage ? 'source' : 'id'} as fallback.`, messageDescriptor));\n        if (typeof message === 'string') {\n            return message || defaultMessage || String(id);\n        }\n        return defaultMessage || String(id);\n    }\n    if (Array.isArray(formattedMessageParts)) {\n        if (wrapRichTextChunksInFragment) {\n            return prepareIntlMessageFormatHtmlOutput(formattedMessageParts);\n        }\n        return formattedMessageParts;\n    }\n    return formattedMessageParts;\n}\n","'use strict';\n\nfunction shallowEqualObjects(objA, objB) {\n  if (objA === objB) {\n    return true;\n  }\n\n  if (!objA || !objB) {\n    return false;\n  }\n\n  var aKeys = Object.keys(objA);\n  var bKeys = Object.keys(objB);\n  var len = aKeys.length;\n\n  if (bKeys.length !== len) {\n    return false;\n  }\n\n  for (var i = 0; i < len; i++) {\n    var key = aKeys[i];\n\n    if (objA[key] !== objB[key] || !Object.prototype.hasOwnProperty.call(objB, key)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nmodule.exports = shallowEqualObjects;\n","import { filterProps } from '../utils';\nimport { FormatError } from 'intl-messageformat';\nimport { ReactIntlError } from '../error';\nconst LIST_FORMAT_OPTIONS = [\n    'localeMatcher',\n    'type',\n    'style',\n];\nconst now = Date.now();\nfunction generateToken(i) {\n    return `${now}_${i}_${now}`;\n}\nexport function formatList({ locale, onError }, getListFormat, values, options = {}) {\n    const ListFormat = Intl.ListFormat;\n    if (!ListFormat) {\n        onError(new FormatError(`Intl.ListFormat is not available in this environment.\nTry polyfilling it using \"@formatjs/intl-listformat\"\n`, \"MISSING_INTL_API\" /* MISSING_INTL_API */));\n    }\n    const filteredOptions = filterProps(options, LIST_FORMAT_OPTIONS);\n    try {\n        const richValues = {};\n        const serializedValues = values.map((v, i) => {\n            if (typeof v === 'object') {\n                const id = generateToken(i);\n                richValues[id] = v;\n                return id;\n            }\n            return String(v);\n        });\n        if (!Object.keys(richValues).length) {\n            return getListFormat(locale, filteredOptions).format(serializedValues);\n        }\n        const parts = getListFormat(locale, filteredOptions).formatToParts(serializedValues);\n        return parts.reduce((all, el) => {\n            const val = el.value;\n            if (richValues[val]) {\n                all.push(richValues[val]);\n            }\n            else if (typeof all[all.length - 1] === 'string') {\n                all[all.length - 1] += val;\n            }\n            else {\n                all.push(val);\n            }\n            return all;\n        }, []);\n    }\n    catch (e) {\n        onError(new ReactIntlError(\"FORMAT_ERROR\" /* FORMAT_ERROR */, 'Error formatting list.', e));\n    }\n    return values;\n}\n","import { filterProps } from '../utils';\nimport { FormatError } from 'intl-messageformat';\nimport { ReactIntlError } from '../error';\nconst DISPLAY_NAMES_OPTONS = [\n    'localeMatcher',\n    'style',\n    'type',\n    'fallback',\n];\nexport function formatDisplayName({ locale, onError }, getDisplayNames, value, options = {}) {\n    const DisplayNames = Intl.DisplayNames;\n    if (!DisplayNames) {\n        onError(new FormatError(`Intl.DisplayNames is not available in this environment.\nTry polyfilling it using \"@formatjs/intl-displaynames\"\n`, \"MISSING_INTL_API\" /* MISSING_INTL_API */));\n    }\n    const filteredOptions = filterProps(options, DISPLAY_NAMES_OPTONS);\n    try {\n        return getDisplayNames(locale, filteredOptions).of(value);\n    }\n    catch (e) {\n        onError(new ReactIntlError(\"FORMAT_ERROR\" /* FORMAT_ERROR */, 'Error formatting display name.', e));\n    }\n}\n","/*\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the New BSD License.\n * See the accompanying LICENSE file for terms.\n */\nimport * as React from 'react';\nimport { Provider } from './injectIntl';\nimport { DEFAULT_INTL_CONFIG, createFormatters, invariantIntlContext, createIntlCache, } from '../utils';\nimport { formatNumber, formatNumberToParts } from '../formatters/number';\nimport { formatRelativeTime } from '../formatters/relativeTime';\nimport { formatDate, formatTime, formatDateToParts, formatTimeToParts, } from '../formatters/dateTime';\nimport { formatPlural } from '../formatters/plural';\nimport { formatMessage } from '../formatters/message';\nimport * as shallowEquals_ from 'shallow-equal/objects';\nimport { formatList } from '../formatters/list';\nimport { formatDisplayName } from '../formatters/displayName';\nimport { ReactIntlError } from '../error';\nconst shallowEquals = shallowEquals_.default || shallowEquals_;\nfunction processIntlConfig(config) {\n    return {\n        locale: config.locale,\n        timeZone: config.timeZone,\n        formats: config.formats,\n        textComponent: config.textComponent,\n        messages: config.messages,\n        defaultLocale: config.defaultLocale,\n        defaultFormats: config.defaultFormats,\n        onError: config.onError,\n    };\n}\n/**\n * Create intl object\n * @param config intl config\n * @param cache cache for formatter instances to prevent memory leak\n */\nexport function createIntl(config, cache) {\n    const formatters = createFormatters(cache);\n    const resolvedConfig = Object.assign(Object.assign({}, DEFAULT_INTL_CONFIG), config);\n    const { locale, defaultLocale, onError } = resolvedConfig;\n    if (!locale) {\n        if (onError) {\n            onError(new ReactIntlError(\"INVALID_CONFIG\" /* INVALID_CONFIG */, `\"locale\" was not configured, using \"${defaultLocale}\" as fallback. See https://github.com/formatjs/react-intl/blob/master/docs/API.md#intlshape for more details`));\n        }\n        // Since there's no registered locale data for `locale`, this will\n        // fallback to the `defaultLocale` to make sure things can render.\n        // The `messages` are overridden to the `defaultProps` empty object\n        // to maintain referential equality across re-renders. It's assumed\n        // each <FormattedMessage> contains a `defaultMessage` prop.\n        resolvedConfig.locale = resolvedConfig.defaultLocale || 'en';\n    }\n    else if (!Intl.NumberFormat.supportedLocalesOf(locale).length && onError) {\n        onError(new ReactIntlError(\"MISSING_DATA\" /* MISSING_DATA */, `Missing locale data for locale: \"${locale}\" in Intl.NumberFormat. Using default locale: \"${defaultLocale}\" as fallback. See https://github.com/formatjs/react-intl/blob/master/docs/Getting-Started.md#runtime-requirements for more details`));\n    }\n    else if (!Intl.DateTimeFormat.supportedLocalesOf(locale).length &&\n        onError) {\n        onError(new ReactIntlError(\"MISSING_DATA\" /* MISSING_DATA */, `Missing locale data for locale: \"${locale}\" in Intl.DateTimeFormat. Using default locale: \"${defaultLocale}\" as fallback. See https://github.com/formatjs/react-intl/blob/master/docs/Getting-Started.md#runtime-requirements for more details`));\n    }\n    return Object.assign(Object.assign({}, resolvedConfig), { formatters, formatNumber: formatNumber.bind(null, resolvedConfig, formatters.getNumberFormat), formatNumberToParts: formatNumberToParts.bind(null, resolvedConfig, formatters.getNumberFormat), formatRelativeTime: formatRelativeTime.bind(null, resolvedConfig, formatters.getRelativeTimeFormat), formatDate: formatDate.bind(null, resolvedConfig, formatters.getDateTimeFormat), formatDateToParts: formatDateToParts.bind(null, resolvedConfig, formatters.getDateTimeFormat), formatTime: formatTime.bind(null, resolvedConfig, formatters.getDateTimeFormat), formatTimeToParts: formatTimeToParts.bind(null, resolvedConfig, formatters.getDateTimeFormat), formatPlural: formatPlural.bind(null, resolvedConfig, formatters.getPluralRules), formatMessage: formatMessage.bind(null, resolvedConfig, formatters), formatList: formatList.bind(null, resolvedConfig, formatters.getListFormat), formatDisplayName: formatDisplayName.bind(null, resolvedConfig, formatters.getDisplayNames) });\n}\nexport default class IntlProvider extends React.PureComponent {\n    constructor() {\n        super(...arguments);\n        this.cache = createIntlCache();\n        this.state = {\n            cache: this.cache,\n            intl: createIntl(processIntlConfig(this.props), this.cache),\n            prevConfig: processIntlConfig(this.props),\n        };\n    }\n    static getDerivedStateFromProps(props, { prevConfig, cache }) {\n        const config = processIntlConfig(props);\n        if (!shallowEquals(prevConfig, config)) {\n            return {\n                intl: createIntl(config, cache),\n                prevConfig: config,\n            };\n        }\n        return null;\n    }\n    render() {\n        invariantIntlContext(this.state.intl);\n        return React.createElement(Provider, { value: this.state.intl }, this.props.children);\n    }\n}\nIntlProvider.displayName = 'IntlProvider';\nIntlProvider.defaultProps = DEFAULT_INTL_CONFIG;\n","/*\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the New BSD License.\n * See the accompanying LICENSE file for terms.\n */\nimport * as React from 'react';\nimport { Context } from './injectIntl';\nimport { invariantIntlContext } from '../utils';\nimport { invariant } from '@formatjs/intl-utils';\nconst MINUTE = 60;\nconst HOUR = 60 * 60;\nconst DAY = 60 * 60 * 24;\nfunction selectUnit(seconds) {\n    const absValue = Math.abs(seconds);\n    if (absValue < MINUTE) {\n        return 'second';\n    }\n    if (absValue < HOUR) {\n        return 'minute';\n    }\n    if (absValue < DAY) {\n        return 'hour';\n    }\n    return 'day';\n}\nfunction getDurationInSeconds(unit) {\n    switch (unit) {\n        case 'second':\n            return 1;\n        case 'minute':\n            return MINUTE;\n        case 'hour':\n            return HOUR;\n        default:\n            return DAY;\n    }\n}\nfunction valueToSeconds(value, unit) {\n    if (!value) {\n        return 0;\n    }\n    switch (unit) {\n        case 'second':\n            return value;\n        case 'minute':\n            return value * MINUTE;\n        default:\n            return value * HOUR;\n    }\n}\nconst INCREMENTABLE_UNITS = ['second', 'minute', 'hour'];\nfunction canIncrement(unit = 'second') {\n    return INCREMENTABLE_UNITS.includes(unit);\n}\nexport class FormattedRelativeTime extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        // Public for testing\n        this._updateTimer = null;\n        this.state = {\n            prevUnit: this.props.unit,\n            prevValue: this.props.value,\n            currentValueInSeconds: canIncrement(this.props.unit)\n                ? valueToSeconds(this.props.value, this.props.unit)\n                : 0,\n        };\n        invariant(!props.updateIntervalInSeconds ||\n            !!(props.updateIntervalInSeconds && canIncrement(props.unit)), 'Cannot schedule update with unit longer than hour');\n    }\n    scheduleNextUpdate({ updateIntervalInSeconds, unit }, { currentValueInSeconds }) {\n        clearTimeout(this._updateTimer);\n        this._updateTimer = null;\n        // If there's no interval and we cannot increment this unit, do nothing\n        if (!updateIntervalInSeconds || !canIncrement(unit)) {\n            return;\n        }\n        // Figure out the next interesting time\n        const nextValueInSeconds = currentValueInSeconds - updateIntervalInSeconds;\n        const nextUnit = selectUnit(nextValueInSeconds);\n        // We've reached the max auto incrementable unit, don't schedule another update\n        if (nextUnit === 'day') {\n            return;\n        }\n        const unitDuration = getDurationInSeconds(nextUnit);\n        const remainder = nextValueInSeconds % unitDuration;\n        const prevInterestingValueInSeconds = nextValueInSeconds - remainder;\n        const nextInterestingValueInSeconds = prevInterestingValueInSeconds >= currentValueInSeconds\n            ? prevInterestingValueInSeconds - unitDuration\n            : prevInterestingValueInSeconds;\n        const delayInSeconds = Math.abs(nextInterestingValueInSeconds - currentValueInSeconds);\n        this._updateTimer = setTimeout(() => this.setState({\n            currentValueInSeconds: nextInterestingValueInSeconds,\n        }), delayInSeconds * 1e3);\n    }\n    componentDidMount() {\n        this.scheduleNextUpdate(this.props, this.state);\n    }\n    componentDidUpdate() {\n        this.scheduleNextUpdate(this.props, this.state);\n    }\n    componentWillUnmount() {\n        clearTimeout(this._updateTimer);\n        this._updateTimer = null;\n    }\n    static getDerivedStateFromProps(props, state) {\n        if (props.unit !== state.prevUnit || props.value !== state.prevValue) {\n            return {\n                prevValue: props.value,\n                prevUnit: props.unit,\n                currentValueInSeconds: canIncrement(props.unit)\n                    ? valueToSeconds(props.value, props.unit)\n                    : 0,\n            };\n        }\n        return null;\n    }\n    render() {\n        return (React.createElement(Context.Consumer, null, (intl) => {\n            invariantIntlContext(intl);\n            const { formatRelativeTime, textComponent: Text } = intl;\n            const { children, value, unit, updateIntervalInSeconds } = this.props;\n            const { currentValueInSeconds } = this.state;\n            let currentValue = value || 0;\n            let currentUnit = unit;\n            if (canIncrement(unit) &&\n                typeof currentValueInSeconds === 'number' &&\n                updateIntervalInSeconds) {\n                currentUnit = selectUnit(currentValueInSeconds);\n                const unitDuration = getDurationInSeconds(currentUnit);\n                currentValue = Math.round(currentValueInSeconds / unitDuration);\n            }\n            const formattedRelativeTime = formatRelativeTime(currentValue, currentUnit, Object.assign({}, this.props));\n            if (typeof children === 'function') {\n                return children(formattedRelativeTime);\n            }\n            if (Text) {\n                return React.createElement(Text, null, formattedRelativeTime);\n            }\n            return formattedRelativeTime;\n        }));\n    }\n}\nFormattedRelativeTime.displayName = 'FormattedRelativeTime';\nFormattedRelativeTime.defaultProps = {\n    value: 0,\n    unit: 'second',\n};\nexport default FormattedRelativeTime;\n","/*\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the New BSD License.\n * See the accompanying LICENSE file for terms.\n */\nimport * as React from 'react';\nimport withIntl from './injectIntl';\nconst FormattedPlural = props => {\n    const { value, other, children, intl: { formatPlural, textComponent: Text }, } = props;\n    const pluralCategory = formatPlural(value, props);\n    const formattedPlural = props[pluralCategory] || other;\n    if (typeof children === 'function') {\n        return children(formattedPlural);\n    }\n    if (Text) {\n        return React.createElement(Text, null, formattedPlural);\n    }\n    // Work around @types/react where React.FC cannot return string\n    return formattedPlural;\n};\nFormattedPlural.defaultProps = {\n    type: 'cardinal',\n};\nFormattedPlural.displayName = 'FormattedPlural';\nexport default withIntl(FormattedPlural);\n","/*\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the New BSD License.\n * See the accompanying LICENSE file for terms.\n */\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport { Context } from './injectIntl';\nimport { formatMessage } from '../formatters/message';\nimport { invariantIntlContext, DEFAULT_INTL_CONFIG, createFormatters, } from '../utils';\nimport * as shallowEquals_ from 'shallow-equal/objects';\nconst shallowEquals = shallowEquals_.default || shallowEquals_;\nfunction defaultFormatMessage(descriptor, values) {\n    if (process.env.NODE_ENV !== 'production') {\n        console.error('[React Intl] Could not find required `intl` object. <IntlProvider> needs to exist in the component ancestry. Using default message as fallback.');\n    }\n    return formatMessage(Object.assign(Object.assign({}, DEFAULT_INTL_CONFIG), { locale: 'en' }), createFormatters(), descriptor, values);\n}\nclass FormattedMessage extends React.Component {\n    shouldComponentUpdate(nextProps) {\n        const _a = this.props, { values } = _a, otherProps = __rest(_a, [\"values\"]);\n        const { values: nextValues } = nextProps, nextOtherProps = __rest(nextProps, [\"values\"]);\n        return (!shallowEquals(nextValues, values) ||\n            !shallowEquals(otherProps, nextOtherProps));\n    }\n    render() {\n        return (React.createElement(Context.Consumer, null, (intl) => {\n            if (!this.props.defaultMessage) {\n                invariantIntlContext(intl);\n            }\n            const { formatMessage = defaultFormatMessage, textComponent: Text = React.Fragment, } = intl || {};\n            const { id, description, defaultMessage, values, children, tagName: Component = Text, } = this.props;\n            const descriptor = { id, description, defaultMessage };\n            let nodes = formatMessage(descriptor, values);\n            if (!Array.isArray(nodes)) {\n                nodes = [nodes];\n            }\n            if (typeof children === 'function') {\n                return children(...nodes);\n            }\n            if (Component) {\n                // Needs to use `createElement()` instead of JSX, otherwise React will\n                // warn about a missing `key` prop with rich-text message formatting.\n                return React.createElement(Component, null, ...nodes);\n            }\n            return nodes;\n        }));\n    }\n}\nFormattedMessage.displayName = 'FormattedMessage';\nFormattedMessage.defaultProps = {\n    values: {},\n};\nexport default FormattedMessage;\n","export function defineMessages(msgs) {\n    return msgs;\n}\nexport function defineMessage(msg) {\n    return msg;\n}\nimport { createFormattedComponent, createFormattedDateTimePartsComponent, } from './components/createFormattedComponent';\nexport { default as injectIntl, Provider as RawIntlProvider, Context as IntlContext, } from './components/injectIntl';\nexport { default as useIntl } from './components/useIntl';\nexport { default as IntlProvider, createIntl } from './components/provider';\n// IMPORTANT: Explicit here to prevent api-extractor from outputing `import('./types').CustomFormatConfig`\nexport const FormattedDate = createFormattedComponent('formatDate');\nexport const FormattedTime = createFormattedComponent('formatTime');\nexport const FormattedNumber = createFormattedComponent('formatNumber');\nexport const FormattedList = createFormattedComponent('formatList');\nexport const FormattedDisplayName = createFormattedComponent('formatDisplayName');\nexport const FormattedDateParts = createFormattedDateTimePartsComponent('formatDate');\nexport const FormattedTimeParts = createFormattedDateTimePartsComponent('formatTime');\nexport { FormattedNumberParts } from './components/createFormattedComponent';\nexport { default as FormattedRelativeTime } from './components/relative';\nexport { default as FormattedPlural } from './components/plural';\nexport { default as FormattedMessage } from './components/message';\nexport { createIntlCache } from './utils';\nexport { ReactIntlError, ReactIntlErrorCode } from './error';\n"],"names":["__assign","__spreadArrays","__extends","memoizeIntlConstructor","ReactIntlErrorCode","ReactIntlError","code","message","descriptor","exception","stack","Error","captureStackTrace","filterProps","props","whitelist","defaults","reduce","filtered","name","invariantIntlContext","intl","invariant","defaultErrorHandler","error","console","DEFAULT_INTL_CONFIG","formats","messages","timeZone","undefined","textComponent","React","defaultLocale","defaultFormats","onError","createIntlCache","dateTime","number","relativeTime","pluralRules","list","displayNames","createFormatters","cache","RelativeTimeFormat","Intl","ListFormat","DisplayNames","getDateTimeFormat","DateTimeFormat","getNumberFormat","NumberFormat","getMessageFormat","IntlMessageFormat","getRelativeTimeFormat","getPluralRules","PluralRules","getListFormat","getDisplayNames","getNamedFormat","type","formatType","format","Object","defineProperty","exports","value","hasSymbol","Symbol","for","REACT_ELEMENT_TYPE","REACT_PORTAL_TYPE","REACT_FRAGMENT_TYPE","REACT_STRICT_MODE_TYPE","REACT_PROFILER_TYPE","REACT_PROVIDER_TYPE","REACT_CONTEXT_TYPE","REACT_ASYNC_MODE_TYPE","REACT_CONCURRENT_MODE_TYPE","REACT_FORWARD_REF_TYPE","REACT_SUSPENSE_TYPE","REACT_MEMO_TYPE","REACT_LAZY_TYPE","isValidElementType","$$typeof","lowPriorityWarning","printWarning","_len","arguments","length","args","Array","_key","argIndex","replace","warn","x","condition","_len2","_key2","apply","concat","lowPriorityWarning$1","typeOf","object","$$typeofType","AsyncMode","ConcurrentMode","ContextConsumer","ContextProvider","Element","ForwardRef","Fragment","Lazy","Memo","Portal","Profiler","StrictMode","Suspense","hasWarnedAboutDeprecatedIsAsyncMode","isAsyncMode","isConcurrentMode","isContextConsumer","isContextProvider","isElement","isForwardRef","isFragment","isLazy","isMemo","isPortal","isProfiler","isStrictMode","isSuspense","module","require$$0","REACT_STATICS","childContextTypes","contextType","contextTypes","defaultProps","displayName","getDefaultProps","getDerivedStateFromError","getDerivedStateFromProps","mixins","propTypes","KNOWN_STATICS","prototype","caller","callee","arity","FORWARD_REF_STATICS","render","MEMO_STATICS","compare","TYPE_STATICS","reactIs","getStatics","component","getOwnPropertyNames","getOwnPropertySymbols","getOwnPropertyDescriptor","getPrototypeOf","objectPrototype","hoistNonReactStatics","targetComponent","sourceComponent","blacklist","inheritedComponent","keys","targetStatics","sourceStatics","i","key","e","hoistNonReactStatics_","getDisplayName","Component","IntlContext","IntlConsumer","Consumer","IntlProvider","Provider","Context","injectIntl","WrappedComponent","options","intlPropName","forwardRef","enforceContext","WithIntl","intlProp","assign","ref","forwardedRef","__rest","this","s","t","p","hasOwnProperty","call","indexOf","propertyIsEnumerable","DisplayName","DisplayNameParts","FormattedNumberParts","children","formatProps","formatNumberToParts","createFormattedDateTimePartsComponent","ComponentParts","date","Date","formattedParts","formatDateToParts","formatTimeToParts","createFormattedComponent","formattedValue","Text","useIntl","useContext","NUMBER_FORMAT_OPTIONS","getFormatter","locale","filteredOptions","formatNumber","config","String","formatToParts","RELATIVE_TIME_FORMAT_OPTIONS","formatRelativeTime","unit","FormatError","DATE_TIME_FORMAT_OPTIONS","hour","minute","second","formatDate","formatTime","PLURAL_FORMAT_OPTIONS","formatPlural","select","setTimeZoneInOptions","opts","all","k","deepMergeOptions","opts1","opts2","deepMergeFormatsAndSetTimeZone","f1","mfFormats","time","prepareIntlMessageFormatHtmlOutput","chunks","formatMessage","state","wrapRichTextChunksInFragment","messageDescriptor","id","values","defaultMessage","formattedMessageParts","formatter","formatters","toLowerCase","isArray","shallowEqualObjects","objA","objB","aKeys","bKeys","len","LIST_FORMAT_OPTIONS","now","generateToken","formatList","richValues","serializedValues","map","v","parts","el","val","push","DISPLAY_NAMES_OPTONS","formatDisplayName","of","shallowEquals","shallowEquals_","processIntlConfig","createIntl","resolvedConfig","supportedLocalesOf","bind","prevConfig","MINUTE","HOUR","DAY","selectUnit","seconds","absValue","Math","abs","getDurationInSeconds","valueToSeconds","INCREMENTABLE_UNITS","canIncrement","includes","FormattedRelativeTime","_updateTimer","prevUnit","prevValue","currentValueInSeconds","updateIntervalInSeconds","clearTimeout","nextValueInSeconds","nextUnit","unitDuration","remainder","prevInterestingValueInSeconds","nextInterestingValueInSeconds","delayInSeconds","setTimeout","setState","scheduleNextUpdate","currentValue","currentUnit","round","formattedRelativeTime","FormattedPlural","other","pluralCategory","formattedPlural","withIntl","defaultFormatMessage","FormattedMessage","nextProps","_a","otherProps","nextValues","nextOtherProps","description","tagName","nodes","defineMessages","msgs","defineMessage","msg","FormattedDate","FormattedTime","FormattedNumber","FormattedList","FormattedDisplayName","FormattedDateParts","FormattedTimeParts"],"mappings":"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"}
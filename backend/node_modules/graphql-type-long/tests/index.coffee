test = require 'tape'
{graphql, GraphQLObjectType, GraphQLNonNull, GraphQLInt, GraphQLSchema} = require 'graphql'

GraphQLLong = require '../src/index'

h = new GraphQLNonNull(GraphQLLong)
g = new GraphQLNonNull(h)

# FIXTURE =
#     string: 'string'
#     int: 3
#     float: Math.PI
#     true: true
#     false: true
#     null: null
#     object:
#         string: 'string'
#         int: 3
#         float: Math.PI
#         true: true
#         false: true
#         null: null
#     array: [
#         'string',
#         3,
#         Math.PI,
#         true,
#         false,
#         null
#     ]

# test "GraphQLLong", (t) ->
#     error = null
#     try
#         schema = new GraphQLSchema {
#             query: new GraphQLObjectType {
#                 name: 'Query'
#                 fields: {
#                     value: {
#                         type: GraphQLLong
#                         args: {
#                             arg: {
#                                 type: GraphQLLong
#                             }
#                         }
#                     },
#                     resolve: (self, args, context) -> {value: 1}
#                 }
#             }
#         }
#     catch error
#         console.error error
#     finally
#         t.ok !error?, "Should create a schema with a GraphQLLong type"
#         t.end()

# test "Serialization", (t) ->
#     t.equal GraphQLLong.serialize(FIXTURE), FIXTURE

# test "Parsing", (t) ->
#     graphql schema, 'query ($arg: Long) { value(arg: $arg) }', null, null, { arg: FIXTURE }
#         .then ({data}) =>
#             t.equal data.value, FIXTURE